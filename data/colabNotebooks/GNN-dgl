{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"1RyljUJusRIqxiTAmAZGYoJtf8p16PLLQ","authorship_tag":"ABX9TyMe9CpEqxfGv+3LXGy3PJMV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["%%capture\n","!pip3 install dgl\n","!pip3 install numpy\n","!pip3 install torch\n","!pip3 install networkx\n","!pip3 install matplotlib\n","!pip3 install torch_geometric"],"metadata":{"id":"IQJYpkAjN9YW","executionInfo":{"status":"ok","timestamp":1700591125057,"user_tz":360,"elapsed":49164,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["%matplotlib inline"],"metadata":{"id":"3gJYKGPrOWxW","executionInfo":{"status":"ok","timestamp":1700591125058,"user_tz":360,"elapsed":18,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["import os, sys\n","from copy import deepcopy\n","import numpy as np\n","import pandas as pd\n","from torch_geometric.data import Data\n","import torch as th\n","import torch.nn as nn\n","from torch import optim\n","import torch.nn.functional as F\n","import networkx as nx\n","import matplotlib.pyplot as plt\n","%matplotlib inline"],"metadata":{"id":"t1N96qyVOG7b","executionInfo":{"status":"ok","timestamp":1700591139229,"user_tz":360,"elapsed":14186,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["print(f\"Torch version: {th.__version__}.  CUDA version: {th.version.cuda}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8vUNAmPBQrge","executionInfo":{"status":"ok","timestamp":1700591146045,"user_tz":360,"elapsed":176,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"fdbce754-46bc-49b1-b415-7195b84b79a8"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Torch version: 2.1.0+cu118.  CUDA version: 11.8\n"]}]},{"cell_type":"code","source":["install_command = \"pip install dgl -f https://data.dgl.ai/wheels/cu118/repo.html\""],"metadata":{"id":"8SMo0lBBRFEB","executionInfo":{"status":"ok","timestamp":1700591147370,"user_tz":360,"elapsed":204,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["!{sys.executable} -m {install_command}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2AZG3mTURIGx","executionInfo":{"status":"ok","timestamp":1700591177055,"user_tz":360,"elapsed":29084,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"eff5f64c-34f2-4b98-806d-3d44a506d533"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in links: https://data.dgl.ai/wheels/cu118/repo.html\n","Requirement already satisfied: dgl in /usr/local/lib/python3.10/dist-packages (1.1.2)\n","Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.10/dist-packages (from dgl) (1.23.5)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from dgl) (1.11.3)\n","Requirement already satisfied: networkx>=2.1 in /usr/local/lib/python3.10/dist-packages (from dgl) (3.2.1)\n","Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from dgl) (2.31.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from dgl) (4.66.1)\n","Requirement already satisfied: psutil>=5.8.0 in /usr/local/lib/python3.10/dist-packages (from dgl) (5.9.5)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->dgl) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->dgl) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->dgl) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->dgl) (2023.7.22)\n"]}]},{"cell_type":"code","source":["os.environ['DGLBACKEND'] = 'pytorch'\n","import dgl\n","from dgl import function as fn"],"metadata":{"id":"UXZzuY5FRMLk","executionInfo":{"status":"ok","timestamp":1700591177055,"user_tz":360,"elapsed":12,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["device = th.device('cuda' if th.cuda.is_available() else 'cpu')\n","device"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IbvPMBQ7RQOV","executionInfo":{"status":"ok","timestamp":1700591177055,"user_tz":360,"elapsed":11,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"3d765751-26e9-485b-9225-cfaae0417032"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["device(type='cpu')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"PV3ZyyEANnmk","executionInfo":{"status":"ok","timestamp":1700591358310,"user_tz":360,"elapsed":1367,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"95b9feac-0f29-4a6d-c2de-5dd2ccb2506d"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-13-bc8df6b1647d>:1: DtypeWarning: Columns (10) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv('drive/MyDrive/diabetes/diabetic_data.csv', na_values = '?')\n"]},{"output_type":"execute_result","data":{"text/plain":["        encounter_id  patient_nbr             race  gender      age weight  \\\n","0            2278392      8222157        Caucasian  Female   [0-10)    NaN   \n","1             149190     55629189        Caucasian  Female  [10-20)    NaN   \n","2              64410     86047875  AfricanAmerican  Female  [20-30)    NaN   \n","3             500364     82442376        Caucasian    Male  [30-40)    NaN   \n","4              16680     42519267        Caucasian    Male  [40-50)    NaN   \n","...              ...          ...              ...     ...      ...    ...   \n","101761     443847548    100162476  AfricanAmerican    Male  [70-80)    NaN   \n","101762     443847782     74694222  AfricanAmerican  Female  [80-90)    NaN   \n","101763     443854148     41088789        Caucasian    Male  [70-80)    NaN   \n","101764     443857166     31693671        Caucasian  Female  [80-90)    NaN   \n","101765     443867222    175429310        Caucasian    Male  [70-80)    NaN   \n","\n","        admission_type_id  discharge_disposition_id  admission_source_id  \\\n","0                       6                        25                    1   \n","1                       1                         1                    7   \n","2                       1                         1                    7   \n","3                       1                         1                    7   \n","4                       1                         1                    7   \n","...                   ...                       ...                  ...   \n","101761                  1                         3                    7   \n","101762                  1                         4                    5   \n","101763                  1                         1                    7   \n","101764                  2                         3                    7   \n","101765                  1                         1                    7   \n","\n","        time_in_hospital  ...  glyburide  pioglitazone  rosiglitazone  \\\n","0                      1  ...         No            No             No   \n","1                      3  ...         No            No             No   \n","2                      2  ...         No            No             No   \n","3                      2  ...         No            No             No   \n","4                      1  ...         No            No             No   \n","...                  ...  ...        ...           ...            ...   \n","101761                 3  ...         No            No             No   \n","101762                 5  ...         No            No             No   \n","101763                 1  ...         No            No             No   \n","101764                10  ...         No        Steady             No   \n","101765                 6  ...         No            No             No   \n","\n","        acarbose  miglitol  insulin glyburide-metformin change diabetesMed  \\\n","0             No        No       No                  No     No          No   \n","1             No        No       Up                  No     Ch         Yes   \n","2             No        No       No                  No     No         Yes   \n","3             No        No       Up                  No     Ch         Yes   \n","4             No        No   Steady                  No     Ch         Yes   \n","...          ...       ...      ...                 ...    ...         ...   \n","101761        No        No     Down                  No     Ch         Yes   \n","101762        No        No   Steady                  No     No         Yes   \n","101763        No        No     Down                  No     Ch         Yes   \n","101764        No        No       Up                  No     Ch         Yes   \n","101765        No        No       No                  No     No          No   \n","\n","        readmitted  \n","0               NO  \n","1              >30  \n","2               NO  \n","3               NO  \n","4               NO  \n","...            ...  \n","101761         >30  \n","101762          NO  \n","101763          NO  \n","101764          NO  \n","101765          NO  \n","\n","[101763 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-b54af5ed-0520-419a-96ea-693fcf0e1da6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>encounter_id</th>\n","      <th>patient_nbr</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>weight</th>\n","      <th>admission_type_id</th>\n","      <th>discharge_disposition_id</th>\n","      <th>admission_source_id</th>\n","      <th>time_in_hospital</th>\n","      <th>...</th>\n","      <th>glyburide</th>\n","      <th>pioglitazone</th>\n","      <th>rosiglitazone</th>\n","      <th>acarbose</th>\n","      <th>miglitol</th>\n","      <th>insulin</th>\n","      <th>glyburide-metformin</th>\n","      <th>change</th>\n","      <th>diabetesMed</th>\n","      <th>readmitted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2278392</td>\n","      <td>8222157</td>\n","      <td>Caucasian</td>\n","      <td>Female</td>\n","      <td>[0-10)</td>\n","      <td>NaN</td>\n","      <td>6</td>\n","      <td>25</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>149190</td>\n","      <td>55629189</td>\n","      <td>Caucasian</td>\n","      <td>Female</td>\n","      <td>[10-20)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Up</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>&gt;30</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>64410</td>\n","      <td>86047875</td>\n","      <td>AfricanAmerican</td>\n","      <td>Female</td>\n","      <td>[20-30)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>500364</td>\n","      <td>82442376</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>[30-40)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Up</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16680</td>\n","      <td>42519267</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>[40-50)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Steady</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>101761</th>\n","      <td>443847548</td>\n","      <td>100162476</td>\n","      <td>AfricanAmerican</td>\n","      <td>Male</td>\n","      <td>[70-80)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Down</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>&gt;30</td>\n","    </tr>\n","    <tr>\n","      <th>101762</th>\n","      <td>443847782</td>\n","      <td>74694222</td>\n","      <td>AfricanAmerican</td>\n","      <td>Female</td>\n","      <td>[80-90)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Steady</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>101763</th>\n","      <td>443854148</td>\n","      <td>41088789</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>[70-80)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Down</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>101764</th>\n","      <td>443857166</td>\n","      <td>31693671</td>\n","      <td>Caucasian</td>\n","      <td>Female</td>\n","      <td>[80-90)</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Steady</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Up</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>101765</th>\n","      <td>443867222</td>\n","      <td>175429310</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>[70-80)</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>NO</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>101763 rows × 38 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b54af5ed-0520-419a-96ea-693fcf0e1da6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b54af5ed-0520-419a-96ea-693fcf0e1da6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b54af5ed-0520-419a-96ea-693fcf0e1da6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ba7bffc6-c789-47e8-95b3-be08bb515068\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba7bffc6-c789-47e8-95b3-be08bb515068')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ba7bffc6-c789-47e8-95b3-be08bb515068 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}],"source":["df = pd.read_csv('drive/MyDrive/diabetes/diabetic_data.csv', na_values = '?')\n","df = df.drop(columns = ['acetohexamide', 'tolbutamide', 'troglitazone', 'tolazamide', 'examide', 'citoglipton',\n","                   'glipizide-metformin', 'glimepiride-pioglitazone', 'metformin-rosiglitazone',\n","                   'metformin-pioglitazone', 'payer_code', 'medical_specialty'], axis=1)\n","df = df.drop(df[df['gender'] == 'Unknown/Invalid'].index)\n","df"]},{"cell_type":"code","source":["print(df.shape)\n","df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p2A5fMwkOiqK","executionInfo":{"status":"ok","timestamp":1700236584609,"user_tz":360,"elapsed":121,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"78d77d38-7dfd-40e9-c185-fb963c63a3d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(101766, 50)\n"]},{"output_type":"execute_result","data":{"text/plain":["Index(['encounter_id', 'patient_nbr', 'race', 'gender', 'age', 'weight',\n","       'admission_type_id', 'discharge_disposition_id', 'admission_source_id',\n","       'time_in_hospital', 'payer_code', 'medical_specialty',\n","       'num_lab_procedures', 'num_procedures', 'num_medications',\n","       'number_outpatient', 'number_emergency', 'number_inpatient', 'diag_1',\n","       'diag_2', 'diag_3', 'number_diagnoses', 'max_glu_serum', 'A1Cresult',\n","       'metformin', 'repaglinide', 'nateglinide', 'chlorpropamide',\n","       'glimepiride', 'acetohexamide', 'glipizide', 'glyburide', 'tolbutamide',\n","       'pioglitazone', 'rosiglitazone', 'acarbose', 'miglitol', 'troglitazone',\n","       'tolazamide', 'examide', 'citoglipton', 'insulin',\n","       'glyburide-metformin', 'glipizide-metformin',\n","       'glimepiride-pioglitazone', 'metformin-rosiglitazone',\n","       'metformin-pioglitazone', 'change', 'diabetesMed', 'readmitted'],\n","      dtype='object')"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.nunique().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MSUeCqrkRW3O","executionInfo":{"status":"ok","timestamp":1700236587171,"user_tz":360,"elapsed":1147,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"a6f2e12c-754d-4db8-f4cb-f56fd493d4e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["encounter_id                101766\n","patient_nbr                  71518\n","race                             6\n","gender                           3\n","age                             10\n","weight                          10\n","admission_type_id                8\n","discharge_disposition_id        26\n","admission_source_id             17\n","time_in_hospital                14\n","payer_code                      18\n","medical_specialty               73\n","num_lab_procedures             118\n","num_procedures                   7\n","num_medications                 75\n","number_outpatient               39\n","number_emergency                33\n","number_inpatient                21\n","diag_1                         717\n","diag_2                         749\n","diag_3                         790\n","number_diagnoses                16\n","max_glu_serum                    4\n","A1Cresult                        4\n","metformin                        4\n","repaglinide                      4\n","nateglinide                      4\n","chlorpropamide                   4\n","glimepiride                      4\n","acetohexamide                    2\n","glipizide                        4\n","glyburide                        4\n","tolbutamide                      2\n","pioglitazone                     4\n","rosiglitazone                    4\n","acarbose                         4\n","miglitol                         4\n","troglitazone                     2\n","tolazamide                       3\n","examide                          1\n","citoglipton                      1\n","insulin                          4\n","glyburide-metformin              4\n","glipizide-metformin              2\n","glimepiride-pioglitazone         2\n","metformin-rosiglitazone          2\n","metformin-pioglitazone           2\n","change                           2\n","diabetesMed                      2\n","readmitted                       3\n","dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["Conclusion:\n","Nodes:\n","\n","    Patient Nodes:\n","        patient_nbr, race, gender, age, weight, payer_code, etc.\n","        Each unique patient number (patient_nbr) represents a distinct patient node, with associated demographic information (race, gender, age, etc.), medical history (payer_code), and other attributes.\n","\n","    Medical Entity Nodes:\n","        diag_1, diag_2, diag_3, medical_specialty, etc.\n","        Nodes representing medical diagnoses (diag_1, diag_2, diag_3) or medical specialties (medical_specialty) can be separate nodes. Each unique diagnosis code or specialty represents a node in the graph.\n","\n","    Medication Nodes:\n","        metformin, repaglinide, insulin, etc.\n","        Nodes representing different medications, where each unique medication becomes a node in the graph.\n","\n","    Procedure Nodes:\n","        num_procedures, information related to procedures performed.\n","        Nodes representing different procedures performed on patients.\n","\n","    Lab Test Nodes:\n","        num_lab_procedures, information about lab tests conducted.\n","        Nodes representing various lab tests performed on patients.\n","\n","    Admission/Discharge Nodes:\n","        admission_type_id, discharge_disposition_id, admission_source_id.\n","        Nodes representing different admission types, discharge dispositions, and sources of admission.\n","\n","Edges:\n","\n","    Patient-Related Edges:\n","        Edges connecting patient nodes to their demographic attributes, medical history, and admission details.\n","\n","    Diagnosis-Related Edges:\n","        Edges connecting patient nodes to their diagnoses (diag_1, diag_2, diag_3).\n","\n","    Medication-Related Edges:\n","        Edges connecting patient nodes to the medications they have been prescribed or have taken (metformin, repaglinide, etc.).\n","\n","    Procedure and Lab Test Edges:\n","        Edges connecting patient nodes to the procedures (num_procedures) and lab tests (num_lab_procedures) they have undergone.\n","\n","    Admission-Related Edges:\n","        Edges connecting patient nodes to their admission type, discharge disposition, and admission source."],"metadata":{"id":"XSMpAPaSRp_K"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":273},"id":"gcovxGNITSpF","executionInfo":{"status":"ok","timestamp":1700236593329,"user_tz":360,"elapsed":142,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"dfee7bc5-9e02-46c9-8325-d1827ff6be33"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   encounter_id  patient_nbr             race  gender      age weight  \\\n","0       2278392      8222157        Caucasian  Female   [0-10)      ?   \n","1        149190     55629189        Caucasian  Female  [10-20)      ?   \n","2         64410     86047875  AfricanAmerican  Female  [20-30)      ?   \n","3        500364     82442376        Caucasian    Male  [30-40)      ?   \n","4         16680     42519267        Caucasian    Male  [40-50)      ?   \n","\n","   admission_type_id  discharge_disposition_id  admission_source_id  \\\n","0                  6                        25                    1   \n","1                  1                         1                    7   \n","2                  1                         1                    7   \n","3                  1                         1                    7   \n","4                  1                         1                    7   \n","\n","   time_in_hospital  ... citoglipton insulin  glyburide-metformin  \\\n","0                 1  ...          No      No                   No   \n","1                 3  ...          No      Up                   No   \n","2                 2  ...          No      No                   No   \n","3                 2  ...          No      Up                   No   \n","4                 1  ...          No  Steady                   No   \n","\n","   glipizide-metformin  glimepiride-pioglitazone  metformin-rosiglitazone  \\\n","0                   No                        No                       No   \n","1                   No                        No                       No   \n","2                   No                        No                       No   \n","3                   No                        No                       No   \n","4                   No                        No                       No   \n","\n","   metformin-pioglitazone  change diabetesMed readmitted  \n","0                      No      No          No         NO  \n","1                      No      Ch         Yes        >30  \n","2                      No      No         Yes         NO  \n","3                      No      Ch         Yes         NO  \n","4                      No      Ch         Yes         NO  \n","\n","[5 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-e401e1a3-8672-43a8-b934-1d684510239a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>encounter_id</th>\n","      <th>patient_nbr</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>weight</th>\n","      <th>admission_type_id</th>\n","      <th>discharge_disposition_id</th>\n","      <th>admission_source_id</th>\n","      <th>time_in_hospital</th>\n","      <th>...</th>\n","      <th>citoglipton</th>\n","      <th>insulin</th>\n","      <th>glyburide-metformin</th>\n","      <th>glipizide-metformin</th>\n","      <th>glimepiride-pioglitazone</th>\n","      <th>metformin-rosiglitazone</th>\n","      <th>metformin-pioglitazone</th>\n","      <th>change</th>\n","      <th>diabetesMed</th>\n","      <th>readmitted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2278392</td>\n","      <td>8222157</td>\n","      <td>Caucasian</td>\n","      <td>Female</td>\n","      <td>[0-10)</td>\n","      <td>?</td>\n","      <td>6</td>\n","      <td>25</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>149190</td>\n","      <td>55629189</td>\n","      <td>Caucasian</td>\n","      <td>Female</td>\n","      <td>[10-20)</td>\n","      <td>?</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Up</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>&gt;30</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>64410</td>\n","      <td>86047875</td>\n","      <td>AfricanAmerican</td>\n","      <td>Female</td>\n","      <td>[20-30)</td>\n","      <td>?</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>500364</td>\n","      <td>82442376</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>[30-40)</td>\n","      <td>?</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Up</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16680</td>\n","      <td>42519267</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>[40-50)</td>\n","      <td>?</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Steady</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>NO</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 50 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e401e1a3-8672-43a8-b934-1d684510239a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e401e1a3-8672-43a8-b934-1d684510239a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e401e1a3-8672-43a8-b934-1d684510239a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-176daa75-4af1-4935-9670-4bc10ed53d31\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-176daa75-4af1-4935-9670-4bc10ed53d31')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-176daa75-4af1-4935-9670-4bc10ed53d31 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["numerical_columns = df.select_dtypes(include=['int64']).columns.tolist()\n","object_columns = df.select_dtypes(include=['object']).columns.tolist()\n","label = 'readmitted'\n","print(\"Numerical Columns:\")\n","print(numerical_columns)\n","\n","print(\"\\nObject (Categorical) Columns:\")\n","print(object_columns)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BXHTsF9N9aXP","executionInfo":{"status":"ok","timestamp":1700236594416,"user_tz":360,"elapsed":144,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"3521bb3e-0e79-45c1-a810-13eb84009eae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Numerical Columns:\n","['encounter_id', 'patient_nbr', 'admission_type_id', 'discharge_disposition_id', 'admission_source_id', 'time_in_hospital', 'num_lab_procedures', 'num_procedures', 'num_medications', 'number_outpatient', 'number_emergency', 'number_inpatient', 'number_diagnoses']\n","\n","Object (Categorical) Columns:\n","['race', 'gender', 'age', 'weight', 'payer_code', 'medical_specialty', 'diag_1', 'diag_2', 'diag_3', 'max_glu_serum', 'A1Cresult', 'metformin', 'repaglinide', 'nateglinide', 'chlorpropamide', 'glimepiride', 'acetohexamide', 'glipizide', 'glyburide', 'tolbutamide', 'pioglitazone', 'rosiglitazone', 'acarbose', 'miglitol', 'troglitazone', 'tolazamide', 'examide', 'citoglipton', 'insulin', 'glyburide-metformin', 'glipizide-metformin', 'glimepiride-pioglitazone', 'metformin-rosiglitazone', 'metformin-pioglitazone', 'change', 'diabetesMed', 'readmitted']\n"]}]},{"cell_type":"code","source":["file_name = \"numerical_unique_values.txt\"  # File to save unique values\n","\n","with open(file_name, 'w') as file:\n","    for column in df[numerical_columns]:\n","        distinct_values = df[column].unique()\n","        file.write(f\"Column: {column}\\n\")\n","        file.write(f\"{distinct_values}\\n\\n\")"],"metadata":{"id":"QBsYPwxS_-vy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["file_name = \"object_unique_values.txt\"  # File to save unique values\n","\n","with open(file_name, 'w') as file:\n","    for column in df[object_columns]:\n","        distinct_values = df[column].unique()\n","        file.write(f\"Column: {column}\\n\")\n","        file.write(f\"{distinct_values}\\n\\n\")"],"metadata":{"id":"4-IKSMuz_-tK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"b0Md-_47_-qF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"RgNQp2ES_99h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Patient Nodes\n","patient_features = df[['race', 'gender', 'age', 'weight', 'payer_code']].values\n","patient_nodes = Data(x=torch.tensor(patient_features, dtype=torch.float),\n","                     node_type=torch.tensor([0]*len(patient_features), dtype=torch.long))\n","\n","# Medical Entity Nodes\n","diagnosis_features = df[['diag_1', 'diag_2', 'diag_3', 'medical_specialty']].values\n","diagnosis_nodes = Data(x=torch.tensor(diagnosis_features, dtype=torch.float),\n","                       node_type=torch.tensor([1]*len(diagnosis_features), dtype=torch.long))\n","\n","# Medication Nodes\n","medication_features = df[['metformin', 'repaglinide', 'insulin']].values\n","medication_nodes = Data(x=torch.tensor(medication_features, dtype=torch.float),\n","                        node_type=torch.tensor([2]*len(medication_features), dtype=torch.long))\n","\n","# Procedure Nodes\n","procedure_features = df[['num_procedures']].values\n","procedure_nodes = Data(x=torch.tensor(procedure_features, dtype=torch.float),\n","                       node_type=torch.tensor([3]*len(procedure_features), dtype=torch.long))\n","\n","# Lab Test Nodes\n","lab_test_features = df[['num_lab_procedures']].values\n","lab_test_nodes = Data(x=torch.tensor(lab_test_features, dtype=torch.float),\n","                      node_type=torch.tensor([4]*len(lab_test_features), dtype=torch.long))\n","\n","# Admission/Discharge Nodes\n","admission_features = df[['admission_type_id', 'discharge_disposition_id', 'admission_source_id']].values\n","admission_nodes = Data(x=torch.tensor(admission_features, dtype=torch.float),\n","                       node_type=torch.tensor([5]*len(admission_features), dtype=torch.long))"],"metadata":{"id":"F2tpRAAaU3Sn","executionInfo":{"status":"error","timestamp":1700236596338,"user_tz":360,"elapsed":537,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"colab":{"base_uri":"https://localhost:8080/","height":267},"outputId":"8e6dab69-fd94-49d8-be54-54eb1119d7b3"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-42cc3a5c1b97>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Patient Nodes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mpatient_features\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'race'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gender'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'age'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'weight'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'payer_code'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m patient_nodes = Data(x=torch.tensor(patient_features, dtype=torch.float), \n\u001b[0m\u001b[1;32m      4\u001b[0m                      node_type=torch.tensor([0]*len(patient_features), dtype=torch.long))\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: can't convert np.ndarray of type numpy.object_. The only supported types are: float64, float32, float16, complex64, complex128, int64, int32, int16, int8, uint8, and bool."]}]},{"cell_type":"code","source":["print(\"Patient Nodes:\")\n","print(patient_nodes)\n","\n","print(\"\\nMedical Entity Nodes:\")\n","print(diagnosis_nodes)\n","\n","print(\"\\nMedication Nodes:\")\n","print(medication_nodes)\n","\n","print(\"\\nProcedure Nodes:\")\n","print(procedure_nodes)\n","\n","print(\"\\nLab Test Nodes:\")\n","print(lab_test_nodes)\n","\n","print(\"\\nAdmission/Discharge Nodes:\")\n","print(admission_nodes)"],"metadata":{"id":"7H3at-ETU2_I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"u-3MS637U2yf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["g = dgl.DGLGraph()\n"],"metadata":{"id":"wU0g3f_gU1kF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1700193992339,"user_tz":360,"elapsed":19,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"3e502996-ddfd-4f5b-802f-77b463ad495d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/dgl/heterograph.py:92: DGLWarning: Recommend creating graphs by `dgl.graph(data)` instead of `dgl.DGLGraph(data)`.\n","  dgl_warning(\n"]}]},{"cell_type":"code","source":["g.add_nodes(len(node_ids))"],"metadata":{"id":"SrzcAzIYU1Zl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":249},"id":"PCvX8OoN-YZG","executionInfo":{"status":"error","timestamp":1700194281915,"user_tz":360,"elapsed":571,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"b0aea06c-e734-4e73-b273-554a453cd7a4"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-4970d8aef20f>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mnode\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnode_ids\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# Check if the node exists in your graph\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m             \u001b[0mnode_id\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnode_ids\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;31m# Retrieve the node ID for the categorical value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m             \u001b[0mg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd_edge\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumn\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Add an edge between node_id and the column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'DGLGraph' object has no attribute 'add_edge'"]}]},{"cell_type":"code","source":["nx_g = g.to_networkx()\n","plt.figure(figsize=(10, 8))\n","pos = nx.spring_layout(nx_g)  # Layout algorithm for node positioning\n","nx.draw(nx_g, pos, with_labels=True, node_size=200, node_color='skyblue', font_size=8)\n","plt.title(\"Graph Visualization\")\n","plt.show()"],"metadata":{"id":"pc9VyHQQPCmn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"iUPEctVDPtqL"},"execution_count":null,"outputs":[]}]}