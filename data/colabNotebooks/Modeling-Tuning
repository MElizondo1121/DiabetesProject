{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"vEp5XRr-VFRZ"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from matplotlib import rcParams\n","import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","import re\n","\n","assert len(tf.config.list_physical_devices('GPU')) > 0\n","pd.set_option('display.max_columns', 100)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":954},"executionInfo":{"elapsed":799,"status":"ok","timestamp":1701745174572,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"scuJ2ztMVPSx","outputId":"8d323fa5-20c7-482e-f1b4-024c2215b4a3"},"outputs":[{"output_type":"stream","name":"stdout","text":["encounter_id                101763\n","patient_nbr                  71515\n","race                             5\n","gender                           2\n","age                             10\n","weight                           9\n","admission_type_id                4\n","discharge_disposition_id         2\n","admission_source_id              3\n","time_in_hospital                14\n","num_lab_procedures             118\n","num_procedures                   7\n","num_medications                 75\n","number_outpatient               39\n","number_emergency                33\n","number_inpatient                21\n","diag_1                         716\n","diag_2                         716\n","diag_3                         716\n","number_diagnoses                16\n","max_glu_serum                    4\n","A1Cresult                        4\n","metformin                        4\n","repaglinide                      4\n","nateglinide                      4\n","chlorpropamide                   4\n","glimepiride                      4\n","glipizide                        4\n","glyburide                        4\n","pioglitazone                     4\n","rosiglitazone                    4\n","acarbose                         4\n","miglitol                         4\n","insulin                          4\n","glyburide-metformin              4\n","change                           2\n","diabetesMed                      2\n","readmitted                       2\n","dtype: int64\n","[dtype('float64') dtype('O')]\n"]},{"output_type":"execute_result","data":{"text/plain":["   encounter_id  patient_nbr             race  gender   age    weight  \\\n","0     2278392.0    8222157.0        Caucasian  Female   5.0  [75-100)   \n","1      149190.0   55629189.0        Caucasian  Female  15.0  [75-100)   \n","2       64410.0   86047875.0  AfricanAmerican  Female  25.0  [75-100)   \n","3      500364.0   82442376.0        Caucasian    Male  35.0  [75-100)   \n","4       16680.0   42519267.0        Caucasian    Male  45.0  [75-100)   \n","\n","  admission_type_id discharge_disposition_id admission_source_id  \\\n","0         Emergency       Discharged to Home            Referral   \n","1         Emergency       Discharged to Home           Emergency   \n","2         Emergency       Discharged to Home           Emergency   \n","3         Emergency       Discharged to Home           Emergency   \n","4         Emergency       Discharged to Home           Emergency   \n","\n","   time_in_hospital  num_lab_procedures  num_procedures  num_medications  \\\n","0               1.0                41.0             0.0              1.0   \n","1               3.0                59.0             0.0             18.0   \n","2               2.0                11.0             5.0             13.0   \n","3               2.0                44.0             1.0             16.0   \n","4               1.0                51.0             0.0              8.0   \n","\n","   number_outpatient  number_emergency  number_inpatient  diag_1  diag_2  \\\n","0                0.0               0.0               0.0  250.83  250.83   \n","1                0.0               0.0               0.0     276     276   \n","2                2.0               0.0               1.0     648     648   \n","3                0.0               0.0               0.0       8       8   \n","4                0.0               0.0               0.0     197     197   \n","\n","   diag_3  number_diagnoses max_glu_serum A1Cresult metformin repaglinide  \\\n","0  250.83               1.0          None      None        No          No   \n","1     276               9.0          None      None        No          No   \n","2     648               6.0          None      None        No          No   \n","3       8               7.0          None      None        No          No   \n","4     197               5.0          None      None        No          No   \n","\n","  nateglinide chlorpropamide glimepiride glipizide glyburide pioglitazone  \\\n","0          No             No          No        No        No           No   \n","1          No             No          No        No        No           No   \n","2          No             No          No    Steady        No           No   \n","3          No             No          No        No        No           No   \n","4          No             No          No    Steady        No           No   \n","\n","  rosiglitazone acarbose miglitol insulin glyburide-metformin change  \\\n","0            No       No       No      No                  No     No   \n","1            No       No       No      Up                  No     Ch   \n","2            No       No       No      No                  No     No   \n","3            No       No       No      Up                  No     Ch   \n","4            No       No       No  Steady                  No     Ch   \n","\n","  diabetesMed  readmitted  \n","0          No         0.0  \n","1         Yes         0.0  \n","2         Yes         0.0  \n","3         Yes         0.0  \n","4         Yes         0.0  "],"text/html":["\n","  <div id=\"df-9108f0b7-1a2a-4219-8c39-2c456d00fdf7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>encounter_id</th>\n","      <th>patient_nbr</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>weight</th>\n","      <th>admission_type_id</th>\n","      <th>discharge_disposition_id</th>\n","      <th>admission_source_id</th>\n","      <th>time_in_hospital</th>\n","      <th>num_lab_procedures</th>\n","      <th>num_procedures</th>\n","      <th>num_medications</th>\n","      <th>number_outpatient</th>\n","      <th>number_emergency</th>\n","      <th>number_inpatient</th>\n","      <th>diag_1</th>\n","      <th>diag_2</th>\n","      <th>diag_3</th>\n","      <th>number_diagnoses</th>\n","      <th>max_glu_serum</th>\n","      <th>A1Cresult</th>\n","      <th>metformin</th>\n","      <th>repaglinide</th>\n","      <th>nateglinide</th>\n","      <th>chlorpropamide</th>\n","      <th>glimepiride</th>\n","      <th>glipizide</th>\n","      <th>glyburide</th>\n","      <th>pioglitazone</th>\n","      <th>rosiglitazone</th>\n","      <th>acarbose</th>\n","      <th>miglitol</th>\n","      <th>insulin</th>\n","      <th>glyburide-metformin</th>\n","      <th>change</th>\n","      <th>diabetesMed</th>\n","      <th>readmitted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2278392.0</td>\n","      <td>8222157.0</td>\n","      <td>Caucasian</td>\n","      <td>Female</td>\n","      <td>5.0</td>\n","      <td>[75-100)</td>\n","      <td>Emergency</td>\n","      <td>Discharged to Home</td>\n","      <td>Referral</td>\n","      <td>1.0</td>\n","      <td>41.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>250.83</td>\n","      <td>250.83</td>\n","      <td>250.83</td>\n","      <td>1.0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>149190.0</td>\n","      <td>55629189.0</td>\n","      <td>Caucasian</td>\n","      <td>Female</td>\n","      <td>15.0</td>\n","      <td>[75-100)</td>\n","      <td>Emergency</td>\n","      <td>Discharged to Home</td>\n","      <td>Emergency</td>\n","      <td>3.0</td>\n","      <td>59.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>276</td>\n","      <td>276</td>\n","      <td>276</td>\n","      <td>9.0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Up</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>64410.0</td>\n","      <td>86047875.0</td>\n","      <td>AfricanAmerican</td>\n","      <td>Female</td>\n","      <td>25.0</td>\n","      <td>[75-100)</td>\n","      <td>Emergency</td>\n","      <td>Discharged to Home</td>\n","      <td>Emergency</td>\n","      <td>2.0</td>\n","      <td>11.0</td>\n","      <td>5.0</td>\n","      <td>13.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>648</td>\n","      <td>648</td>\n","      <td>648</td>\n","      <td>6.0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Steady</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>500364.0</td>\n","      <td>82442376.0</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>35.0</td>\n","      <td>[75-100)</td>\n","      <td>Emergency</td>\n","      <td>Discharged to Home</td>\n","      <td>Emergency</td>\n","      <td>2.0</td>\n","      <td>44.0</td>\n","      <td>1.0</td>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>7.0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Up</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16680.0</td>\n","      <td>42519267.0</td>\n","      <td>Caucasian</td>\n","      <td>Male</td>\n","      <td>45.0</td>\n","      <td>[75-100)</td>\n","      <td>Emergency</td>\n","      <td>Discharged to Home</td>\n","      <td>Emergency</td>\n","      <td>1.0</td>\n","      <td>51.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>197</td>\n","      <td>197</td>\n","      <td>197</td>\n","      <td>5.0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Steady</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Steady</td>\n","      <td>No</td>\n","      <td>Ch</td>\n","      <td>Yes</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9108f0b7-1a2a-4219-8c39-2c456d00fdf7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9108f0b7-1a2a-4219-8c39-2c456d00fdf7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9108f0b7-1a2a-4219-8c39-2c456d00fdf7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c4272e6-204c-4714-a035-e8b3b05f274d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c4272e6-204c-4714-a035-e8b3b05f274d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c4272e6-204c-4714-a035-e8b3b05f274d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}],"source":["df = pd.read_csv('drive/MyDrive/diabetes/processed_diabetes_data.csv').drop('Unnamed: 0', axis=1)\n","print(df.nunique())\n","\n","cat = ['age','race', 'gender','admission_type_id', 'discharge_disposition_id',\n","       'admission_source_id', 'weight']\n","cond = ['metformin', 'repaglinide', 'nateglinide', 'chlorpropamide', 'glimepiride',\n","       'acetohexamide', 'glipizide', 'glyburide', 'tolbutamide','pioglitazone', 'rosiglitazone', 'acarbose', 'miglitol', 'troglitazone',\n","       'tolazamide', 'examide', 'citoglipton', 'insulin','glyburide-metformin', 'glipizide-metformin',\n","       'glimepiride-pioglitazone', 'metformin-rosiglitazone','metformin-pioglitazone', 'change', 'diabetesMed',]\n","num = ['max_glu_serum', 'A1Cresult', 'time_in_hospital', 'num_lab_procedures', 'num_procedures',\n","       'num_medications', 'number_outpatient', 'number_emergency',\n","       'number_inpatient', 'number_diagnoses', 'diag_1', 'diag_2', 'diag_3']\n","label = 'readmitted'\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":263,"status":"ok","timestamp":1701745175768,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"18jBjGxDVQ89","outputId":"27889078-f143-4e78-9221-173f4346e75d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["38"]},"metadata":{},"execution_count":44}],"source":["len(df.columns)"]},{"cell_type":"markdown","metadata":{"id":"z0XZF6wIX5Qv"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":508},"executionInfo":{"elapsed":925,"status":"ok","timestamp":1701745185077,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"Bovbqhh3vtOG","outputId":"dc7df389-7f40-4636-dfe0-69fb3e6d4731"},"outputs":[{"output_type":"stream","name":"stdout","text":["90406\n","11357\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAk0AAAHHCAYAAACiOWx7AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAzgklEQVR4nO3de1RVdd7H8Q83xwtKCpJ5SwcESUBQ12MQRqFjpTGTd8tbDo5mplNPpmbmlcRszYyplYbpiDohpeSUOjNZMw4+go2GmY73W6KTcvESeOG2nz962I8nrH4ieg75fq3VWp29f2ef7znK4u0+m4ObZVmWAAAA8IPcnT0AAABATUA0AQAAGCCaAAAADBBNAAAABogmAAAAA0QTAACAAaIJAADAANEEAABggGgCAAAwQDQBt4EhQ4bo0UcfrdZjBgcHa8GCBdV6TGdYsGCBgoODnT3GTbd27VoFBwcrJyen2o7pKq/dkCFDNGTIEGePgdsA0QS4iIpvQAUFBdfc/+ijj/KNoYao+LOs+K9du3aKi4tTYmKiLly44OzxbqpFixZp06ZNlbZ//vnnWrBgwU/++eOnjWgCgJtk+vTpmjt3rl5++WWFhYVpxYoVGjVqlLPHqjajR4/Wrl27HLYtXrz4mtGUnZ2thQsXEk2o0TydPQAA/FQ99NBDatSokSRp4MCBeu6557Rhwwbt2rVL4eHhTp7uxnl6esrTk28juH1wpgmoobZt26bg4GBt2LBBb731lu6//36FhYVp2LBhOn78+DXvs3v3bg0cOFDh4eGKi4vTu+++67C/uLhYr7/+unr37q2OHTsqIiJCTzzxhLKysn50npMnT2r69Ol66KGHFB4ers6dO2vcuHGVrqGpuLZmx44dSkpK0r333quIiAiNGTPmmm9Nbt68WYMHD1ZkZKQ6dOigPn366MMPP3RY88UXXyghIUEdO3ZU+/btNXjwYO3YsaPSsbZv364+ffooLCxM3bp1U2pq6o8+r+rUqVMnSdJXX33lsN1kftPXV5IOHjyooUOHKjw8XPfff7/efPNNlZeXV1oXFxenUaNGadu2berdu7fCw8MVHx+vbdu2SZL+9re/KT4+XmFhYerdu7f+/e9/O9z/u9c0BQcH6+LFi0pPT7ffmpw0aZIWLFiguXPnSpK6du1q77t69nXr1tkz/Nd//Zeee+45/ec//6k08+rVq9WtWzeFh4erb9++2r59+w++5kB14p8IQA2XnJwsNzc3/frXv1ZhYaGWLFmi8ePH67333nNYd/78eY0cOVKPPPKIevbsqY0bN2r69Ony8vJS3759JUmFhYV677339Oijj6pfv34qKirS+++/rxEjRui9995TSEjI987x5ZdfKjs7Wz179lSTJk108uRJvfvuuxo6dKjWr1+vOnXqOKxPTExUgwYN9Mwzz+jkyZNavny5Zs6cqXnz5tlr1q5dq8mTJ6tNmzYaNWqU6tevr7179yojI0Px8fGSpMzMTP3mN79RaGionnnmGbm5uWnt2rUaNmyY/vSnP9lndPbv36+EhAQ1atRIY8eOVWlpqRYsWCBfX9/q+GMwUhEJDRo0sLeZzm/6+ubm5mro0KEqKyvTyJEjVadOHaWlpelnP/vZNWc6fvy4nn/+eQ0cOFC//OUvtXTpUj311FOaMWOG/vCHP+jxxx+XJL399tt69tln9Ze//EXu7tf+9/bcuXM1ZcoUhYeHq3///pKkli1bqk6dOjp27Jg++ugjvfjii2rYsKEk2Wfh3nrrLb3++ut65JFH1LdvXxUUFGjlypUaNGiQPvjgA/v1eu+99zR16lRFRkZq2LBhOnHihEaPHi0fHx/dddddN/RnAxixALiE+fPnW0FBQVZ+fv419/fs2dMaPHiwfTsrK8sKCgqyHnnkEevKlSv29uXLl1tBQUHW/v377W2DBw+2goKCrKVLl9rbrly5Yv3qV7+yoqKirOLiYsuyLKu0tNThWJZlWefPn7eio6OtF1980WF7UFCQNX/+fPv2pUuXKs2cnZ1tBQUFWenp6fa2NWvWWEFBQdaTTz5plZeX29tnz55thYSEWBcuXLAsy7IuXLhgRUZGWv369bMuX77scNyK+5WXl1vdu3e3fv3rXzsc69KlS1ZcXJw1fPhwe9vTTz9thYWFWSdPnrS3HTp0yAoJCbGCgoIqzX4jKv4sjxw5YuXn51s5OTnW+++/b4WHh1v33nuvdfHixeue3/T1feWVV6ygoCDriy++sLfl5+dbHTt2tIKCgqwTJ07Y2x988EErKCjI+vzzz+1tGRkZVlBQkBUeHu7wWqWmplpBQUFWVlZWped5tYiICGvixImVZl2yZEmlx7csy8rJybFCQkKst956y2H7/v37rXvuucfeXlxcbEVFRVm/+tWvHP6Orl692goKCnL42gBuFt6eA2q43r17q1atWvbtireATpw44bDO09NTAwYMsG/XqlVLAwYMUH5+vvbs2SNJ8vDwsI9VXl6uc+fOqbS0VKGhoZXemvmu2rVr2/9fUlKis2fPqmXLlmrQoME179u/f3+5ubk5zF1WVqaTJ09Kkv7nf/5HRUVFGjlyZKWzJBX327t3r44dO6b4+HidPXtWBQUFKigo0MWLFxUVFaV//etfKi8vV1lZmbZs2aJu3bqpadOm9nECAgIUExPzg8/rRjz88MOKiopSXFycJk+erJYtWyo5Odk+K2Q6v2T++m7evFkREREO10w1atTIPjP3XYGBgYqMjLRvt2/fXpJ07733OrxWFdu/+/fqRn388ccqLy/XI488Yj//goIC+fn56e6777bfKty9e7fy8/M1cOBAh7/vvXr1Uv369at1JuD78PYcUMNd/Y1N+v+3fr77U0r+/v6qW7euw7ZWrVpJ+vZ6mYiICElSenq6li5dqqNHj6qkpMRe27x58x+c4/Lly1q8eLHWrl2r06dPy7Ise98333xz3XNXXPfTpk2b733MY8eOSZImTpz4vWu++eYbFRcX6/Lly7r77rsr7W/durU2b978vfeXpKKiIl28eNG+7eHhYb+19EMWLFggb29vFRQUaMWKFcrJyXGIH9P5fXx8jF/fU6dO2YHz3ed5Ld99W6siQJo0aeKw3dvbW1Llv1c36tixY7IsS927d7/m/ooLzU+dOiVJlf4Mvby81KJFi2qdCfg+RBPgIirOply5cuWa+y9dulTpG5mk772+5OpvqqbWrVunSZMmqVu3bkpISJCvr688PDy0ePHiHz3DMGvWLPtanIiICNWvX19ubm567rnnrjlLdcxdsXbChAnfe71V3bp1VVxcbHzMa1m6dKkWLlxo327WrJk+/fTTH71fp06d7Lh68MEHFR8fr/Hjx2vt2rVyd3c3nl+6/tfXlIeHx3Vtv5HHupby8nK5ubkpOTn5mo/53dAHnIloAlxExZmXo0ePVvrX/6VLl/T111/rvvvuq/Lxz5w5o4sXLzp8E6o409GsWTNJ0l//+le1aNFCCxcudHjrbP78+T96/L/+9a967LHHNGnSJHvblStXrnmWyUTLli0lffuTYNc6QyTJPsPg7e2t6Ojo7z1Wo0aNVLt27Wv+VOHRo0d/dJbHHntM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qEuXLhoxYoQCAgL07LPP6p577tHKlStv/QsDAABcjlOj6dNPP1VoaKjGjRunqKgoPfbYY0pLS7P35+TkKDc3V9HR0fa2+vXrq3379srOzpYkZWdnq0GDBgoLC7PXREdHy93dXbt27ZIk7dy5U506dVKtWrXsNTExMTp69KjOnz9vr4mKinKYLyYmRjt37qz25w0AAGoep0bTiRMn9O6776pVq1Z655139PjjjysxMVHp6emSpNzcXEmSr6+vw/18fX2Vl5cnScrLy1OjRo0c9nt6esrHx8e+f15envz8/BzWVNy++jjfXXP14wAAgNubpzMf3LIshYaG6r//+78lSffcc48OHjyo1NRU9erVy5mjAQAAOHDqmabGjRsrICDAYdvPf/5znTp1yt4vSfn5+Q5r8vPz7bNCfn5+KigocNhfWlqq8+fP2/f38/OrdMao4vbVx/numqsfBwAA3N6cGk0dOnTQ0aNHHbYdO3ZMzZo1kyQ1b95cjRs3VmZmpr2/sLBQX3zxhSIjIyVJkZGRunDhgnbv3m2vycrKUnl5ucLDwyVJERER2r59u0pKSuw1W7duVevWre2f1IuIiFBWVpbDLFu3blVERET1PWEAAFBjOTWahg0bpi+++EKLFi3S8ePH9eGHHyotLU1PPPGEJMnNzU1Dhw7VW2+9pU8++UT79+/XhAkT5O/vr27dukmSAgIC1KVLF7388svatWuXduzYoVmzZqlnz5668847JUnx8fHy8vLSSy+9pIMHD2rDhg1KSUnR8OHD7VmGDh2qjIwMLV26VIcPH9aCBQu0e/duDR48+Na/MAAAwOW4WZZlOXOAv//97/r973+vY8eOqXnz5ho+fLj69+9v77csS/Pnz1daWpouXLigjh07atq0aWrdurW95ty5c5o1a5Y+/fRTubu7q3v37poyZYrq1atnr9m3b59mzpypL7/8Ug0bNtTgwYM1cuRIh1k2btyoefPm6eTJk2rVqpVeeOEFxcbGGj2PwsJCdezYUTt27JC3t/cNvirX1mmElH3wphwaqLEi20jblzh7CgA11fV8/3Z6NP1UEE2AcxBNAG7E9Xz/dvqvUQEAAKgJiCYAAAADRBMAAIABogkAAMAA0QQAAGCAaAIAADBANAEAABggmgAAAAwQTQAAAAaIJgAAAANEEwAAgAGiCQAAwADRBAAAYIBoAgAAMEA0AQAAGCCaAAAADBBNAAAABogmAAAAA0QTAACAAaIJAADAANEEAABggGgCAAAwQDQBAAAYIJoAAAAMVCmaunbtqrNnz1bafuHCBXXt2vWGhwIAAHA1VYqmkydPqry8vNL24uJinT59+oaHAgAAcDWe17P4k08+sf8/IyND9evXt2+Xl5crMzNTzZo1q77pAAAAXMR1RdOYMWMkSW5ubpo0aZLjgTw91axZs0rbAQAAfgquK5r27dsnSYqLi9P777+vRo0a3ZShAAAAXM11RVOFTz/9tLrnAAAAcGlViiZJyszMVGZmpvLz8ytdFJ6UlHTDgwEAALiSKkXTwoUL9cYbbyg0NFSNGzeWm5tbdc8FAADgUqoUTampqUpKStJjjz1WzeMAAAC4pip9TlNJSYk6dOhQ3bMAAAC4rCpFU9++ffXhhx9W9ywAAAAuq0pvz125ckVpaWnKzMxUcHCwPD0dD/Piiy9Wy3AAAACuokrRtH//frVt21aSdODAAYd9XBQOAAB+iqoUTStWrKjuOQAAAFxala5pAgAAuN1U6UzTkCFDfvBtuJSUlCoPBAAA4IqqFE0hISEOt0tLS7V3714dPHiQz24CAAA/SVWKpsmTJ19z+4IFC3Tx4sUbGggAAMAVVes1Tb/85S+1Zs2a6jwkAACAS6jWaMrOzlatWrWq85AAAAAuoUpvzz3zzDMOty3LUm5urnbv3q2nn366WgYDAABwJVWKpvr16zvcdnNzU+vWrTVu3DjFxMRUy2AAAACupErRlJSUVN1zAAAAuLQqRVOF3bt36/Dhw5KkNm3a6J577qmWoQAAAFxNlaIpPz9fzz33nD777DM1aNBAknThwgV17txZf/jDH9SoUaNqHRIAAMDZqvTTc7NmzVJRUZHWr1+vzz77TJ999pk++ugjFRYWKjExsbpnBAAAcLoqRVNGRoamTZumgIAAe1tgYKCmTZumf/7zn9U2HAAAgKuoUjSVl5fLy8ur0nZPT0+Vl5ff8FAAAACupkrRdO+99+qVV17R6dOn7W2nT59WUlKSoqKiqm04AAAAV1GlC8GnTp2q0aNHq2vXrmrSpIkk6euvv1abNm302muvVeuAAAAArqBK0XTXXXcpPT1dW7du1ZEjRyRJAQEBio6OrtbhAAAAXMV1vT2XmZmpHj16qLCwUG5ubrrvvvs0ZMgQDRkyRGFhYerZs6e2b99+s2YFAABwmuuKpuXLl6t///7y9vautK9+/foaMGCAli1bVm3DAQAAuIrriqb9+/erS5cu37v/vvvu0549e254KAAAAFdzXdGUl5cnT8/vvwzK09NTBQUFNzwUAACAq7muaLrzzjt18ODB792/f/9+NW7c+IaHAgAAcDXXFU2xsbF6/fXXdeXKlUr7Ll++rAULFujBBx+stuEAAABcxXV95MDo0aP1t7/9TQ899JAGDRqk1q1bS5KOHDmiP/3pTyorK9NTTz11UwYFAABwpuuKJj8/P6Wmpmr69On6/e9/L8uyJElubm6KiYnR1KlT5efnd1MGBQAAcKbr/nDLZs2aKTk5WefPn9fx48clSXfffbd8fHyqfTgAAABXUaVPBJckHx8fhYeHV+csAAAALqtKv7AXAADgdkM0AQAAGHCZaHr77bcVHBysV155xd525coVzZgxQ507d1ZkZKTGjh2rvLw8h/udOnVKI0eOVPv27RUVFaVXX31VpaWlDmu2bdumXr16KTQ0VL/4xS+0du3aSo+/atUqxcXFKSwsTP369dOuXbtuzhMFAAA1kktE065du5Samqrg4GCH7bNnz9bf//53zZs3TytWrNCZM2f0zDPP2PvLyso0atQolZSUKDU1VXPmzFF6errmz59vrzlx4oRGjRqlzp07a926dRo2bJimTJmijIwMe82GDRuUlJSkMWPGKD09XW3btlVCQoLy8/Nv/pMHAAA1gtOjqaioSC+88IISExMdfgLvm2++0Zo1azRp0iRFRUUpNDRUs2fPVnZ2tnbu3ClJ2rJliw4dOqTXXntNISEhio2N1W9/+1utWrVKxcXFkqTU1FQ1b95ckyZNUkBAgAYPHqyHHnpIf/zjH+3HWrZsmfr3768+ffooMDBQM2bMUO3atbVmzZpb+VIAAAAX5vRomjlzpmJjYxUdHe2wfffu3SopKXHYHhAQoKZNm9rRtHPnTgUFBTl8NlRMTIwKCwt16NAhe01UVJTDsWNiYuxjFBcXa8+ePQ6P4+7urujoaGVnZ1fnUwUAADVYlT9yoDqsX79e//73v/X+++9X2peXlycvLy81aNDAYbuvr69yc3PtNd/9MM2K2z+2prCwUJcvX9b58+dVVlYmX1/fSo9z5MiRG3uCAADgJ8Np0fSf//xHr7zyipYuXaqf/exnzhoDAADA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afz48QoJCdH06dPl4eGhvXv32kE1c+ZMlZSUaOXKlapbt64OHTp0zccGUHMQTQB+8r766itZlqWf//zn13W/p59+2v7/5s2b6+jRo1q/fr0dTadOnVJCQoICAgIkSa1atbLXnzp1Sg899JCCg4MlSS1atLjBZwHA2YgmAD95lmVV6X4bNmxQSkqKTpw4oYsXL6q0tFTe3t72/uHDh2vKlClat26doqOj9fDDD6tly5aSpKFDh2r69OnasmWLoqOj1b17d7Vt27Zang8A5+AjBwD85N19991yc3PTkSNHjO+TnZ2t8ePHKzY2VosWLVJ6erqeeuoplZSU2GvGjh2rjz76SA888ICysrLUo0cPffzxx5Kkfv36adOmTfrVr36lAwcOqG/fvlqxYkW1PzcAtw7RBOAn74477lBMTIxWrVqlixcvVtp/4cKFStuys7PVtGlTjR49WmFhYWrVqpVOnTpVaV3r1q315JNPaunSperevbvWrFlj77vrrrv0+OOPa+HChRo+fLjS0tKq94kBuKWIJgC3hWnTpqm8vFz9+vXTX//6Vx07dkyHDx9WSkqKBgwYUGn93Xffrf/85z9av369vvrqK6WkpDh88OXly5c1c+ZMbdu2TSdPntSOHTv05Zdf2tc3vfLKK8rIyNCJEye0Z88ebdu2zd4HoGbimiYAt4UWLVpo7dq1WrRokV599VWdOXNGjRo1Urt27TR9+vRK67t27aphw4Zp5syZKi4u1gMPPKDRo0dr4cKFkiR3d3edO3dOEydOVF5enho2bKju3btr3LhxkqTy8nLNnDlTX3/9tby9vdWlSxe9+OKLt/IpA6hmblZVr5AEAAC4jfD2HAAAgAGiCQAAwADRBAAAYIBoAgAAMEA0AQAAGCCaAAAADBBNAAAABogmAAAAA0QTAACAAaIJAADAANEEAABggGgCAAAw8L+6gcYKmUSbhAAAAABJRU5ErkJggg==\n"},"metadata":{}}],"source":["class_counts = df['readmitted'].value_counts()\n","class1 = df[df['readmitted'] == 1]\n","class0 = df[df['readmitted'] == 0]\n","print(len(class0))\n","print(len(class1))\n","\n","plt.bar(class_counts.index, class_counts.values)\n","plt.xlabel('Class')\n","plt.ylabel('Count')\n","plt.xticks([0, 1])\n","plt.title('Unbalanced - Readmitted')\n","plt.savefig('drive/MyDrive/diabetes/trueClassCounts.png')\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":508},"executionInfo":{"elapsed":1029,"status":"ok","timestamp":1701745189822,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"3pRWbWO_xn7y","outputId":"f1ef51f5-6be0-49fe-cb04-2c2812af4fa1"},"outputs":[{"output_type":"stream","name":"stdout","text":["11357\n","11357\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["class01 = class0.sample(len(class1), random_state=42)\n","df = pd.concat([class01, class1])\n","class_counts = df['readmitted'].value_counts()\n","class1 = df[df['readmitted'] == 1]\n","class0 = df[df['readmitted'] == 0]\n","print(len(class0))\n","print(len(class1))\n","\n","plt.bar(class_counts.index, class_counts.values)\n","plt.xlabel('Class')\n","plt.ylabel('Count')\n","plt.xticks([0, 1])\n","plt.title('Balanced - Readmitted')\n","plt.savefig('drive/MyDrive/diabetes/balancedSetCounts.png')\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AJfRTp4xXxAG"},"outputs":[],"source":["cols = df.select_dtypes(include='object').columns.tolist()\n","df = pd.get_dummies(df, columns=cols, dtype=int)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1701743032983,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"qQgUjr4zUiI4","outputId":"3db9255d-2b1c-473b-cee6-70fbb55a947e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([dtype('float64'), dtype('int64')], dtype=object)"]},"metadata":{},"execution_count":9}],"source":["df.columns = [re.sub(r'[^\\w\\s]', '_', col) for col in df.columns]\n","df.columns = [re.sub(r'[_]', '_', col) for col in df.columns]\n","\n","df.dtypes.unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"executionInfo":{"elapsed":204,"status":"ok","timestamp":1701743033181,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"7abC7638bREQ","outputId":"00a918ba-d114-488a-ae56-b507f5be883a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        encounter_id  patient_nbr   age  time_in_hospital  num_lab_procedures  \\\n","6139      30870354.0   17187651.0  75.0               4.0                75.0   \n","68443    193300272.0   41348214.0  85.0               1.0                32.0   \n","43279    133604244.0   75948984.0  85.0               2.0                58.0   \n","20468     72130182.0   25151994.0  65.0               7.0                 8.0   \n","52226    154786836.0   58648518.0  75.0              10.0                43.0   \n","...              ...          ...   ...               ...                 ...   \n","101696   443168882.0   71186301.0  85.0               4.0                43.0   \n","101724   443700698.0   69505299.0  75.0               2.0                33.0   \n","101729   443728472.0  178662695.0  75.0               4.0                41.0   \n","101743   443797298.0   89955270.0  75.0               4.0                 2.0   \n","101747   443824292.0  138784172.0  85.0               3.0                31.0   \n","\n","        num_procedures  num_medications  number_outpatient  number_emergency  \\\n","6139               0.0             16.0                0.0               0.0   \n","68443              0.0              6.0                0.0               0.0   \n","43279              0.0             14.0                0.0               2.0   \n","20468              1.0             15.0                3.0               1.0   \n","52226              0.0             16.0                0.0               0.0   \n","...                ...              ...                ...               ...   \n","101696             0.0             20.0                0.0               0.0   \n","101724             0.0             16.0                0.0               0.0   \n","101729             0.0             13.0                0.0               0.0   \n","101743             0.0              7.0                1.0               0.0   \n","101747             2.0             24.0                0.0               0.0   \n","\n","        number_inpatient  number_diagnoses  readmitted  race_AfricanAmerican  \\\n","6139                 0.0               9.0         0.0                     0   \n","68443                0.0               6.0         0.0                     0   \n","43279                0.0               7.0         0.0                     0   \n","20468                4.0               9.0         0.0                     0   \n","52226                0.0               8.0         0.0                     0   \n","...                  ...               ...         ...                   ...   \n","101696               3.0               9.0         1.0                     0   \n","101724               0.0               9.0         1.0                     0   \n","101729               0.0               6.0         1.0                     0   \n","101743               0.0               5.0         1.0                     0   \n","101747               0.0               9.0         1.0                     0   \n","\n","        race_Asian  race_Caucasian  race_Hispanic  race_Other  gender_Female  \\\n","6139             0               1              0           0              0   \n","68443            0               1              0           0              0   \n","43279            0               1              0           0              0   \n","20468            0               1              0           0              1   \n","52226            0               1              0           0              0   \n","...            ...             ...            ...         ...            ...   \n","101696           0               1              0           0              1   \n","101724           0               1              0           0              1   \n","101729           0               1              0           0              1   \n","101743           0               1              0           0              0   \n","101747           0               1              0           0              1   \n","\n","        gender_Male  weight__200  weight__0_25_  weight__100_125_  \\\n","6139              1            0              0                 0   \n","68443             1            0              0                 0   \n","43279             1            0              0                 0   \n","20468             0            0              0                 0   \n","52226             1            0              0                 0   \n","...             ...          ...            ...               ...   \n","101696            0            0              0                 0   \n","101724            0            0              0                 0   \n","101729            0            0              0                 0   \n","101743            1            0              0                 0   \n","101747            0            0              0                 0   \n","\n","        weight__125_150_  weight__150_175_  weight__175_200_  weight__25_50_  \\\n","6139                   0                 0                 0               0   \n","68443                  0                 0                 0               0   \n","43279                  0                 0                 0               0   \n","20468                  0                 0                 0               0   \n","52226                  0                 0                 0               0   \n","...                  ...               ...               ...             ...   \n","101696                 0                 0                 0               0   \n","101724                 0                 0                 0               0   \n","101729                 0                 0                 0               0   \n","101743                 0                 0                 0               0   \n","101747                 0                 0                 0               0   \n","\n","        weight__50_75_  weight__75_100_  admission_type_id_Elective  \\\n","6139                 0                1                           0   \n","68443                0                1                           1   \n","43279                0                1                           0   \n","20468                0                1                           0   \n","52226                0                1                           0   \n","...                ...              ...                         ...   \n","101696               0                1                           0   \n","101724               0                1                           0   \n","101729               0                1                           0   \n","101743               0                1                           0   \n","101747               0                1                           1   \n","\n","        admission_type_id_Emergency  admission_type_id_New Born  \\\n","6139                              1                           0   \n","68443                             0                           0   \n","43279                             1                           0   \n","20468                             1                           0   \n","52226                             1                           0   \n","...                             ...                         ...   \n","101696                            1                           0   \n","101724                            1                           0   \n","101729                            1                           0   \n","101743                            1                           0   \n","101747                            0                           0   \n","\n","        admission_type_id_Trauma Center  \\\n","6139                                  0   \n","68443                                 0   \n","43279                                 0   \n","20468                                 0   \n","52226                                 0   \n","...                                 ...   \n","101696                                0   \n","101724                                0   \n","101729                                0   \n","101743                                0   \n","101747                                0   \n","\n","        discharge_disposition_id_Discharged to Home  \\\n","6139                                              1   \n","68443                                             1   \n","43279                                             1   \n","20468                                             0   \n","52226                                             0   \n","...                                             ...   \n","101696                                            1   \n","101724                                            1   \n","101729                                            1   \n","101743                                            1   \n","101747                                            1   \n","\n","        discharge_disposition_id_Other  admission_source_id_Emergency  \\\n","6139                                 0                              1   \n","68443                                0                              0   \n","43279                                0                              1   \n","20468                                1                              1   \n","52226                                1                              1   \n","...                                ...                            ...   \n","101696                               0                              1   \n","101724                               0                              1   \n","101729                               0                              0   \n","101743                               0                              1   \n","101747                               0                              0   \n","\n","        admission_source_id_Other  admission_source_id_Referral  diag_1_11  \\\n","6139                            0                             0          0   \n","68443                           0                             1          0   \n","43279                           0                             0          0   \n","20468                           0                             0          0   \n","52226                           0                             0          0   \n","...                           ...                           ...        ...   \n","101696                          0                             0          0   \n","101724                          0                             0          0   \n","101729                          0                             1          0   \n","101743                          0                             0          0   \n","101747                          0                             1          0   \n","\n","        diag_1_112  diag_1_117  diag_1_141  diag_1_143  diag_1_146  \\\n","6139             0           0           0           0           0   \n","68443            0           0           0           0           0   \n","43279            0           0           0           0           0   \n","20468            0           0           0           0           0   \n","52226            0           0           0           0           0   \n","...            ...         ...         ...         ...         ...   \n","101696           0           0           0           0           0   \n","101724           0           0           0           0           0   \n","101729           0           0           0           0           0   \n","101743           0           0           0           0           0   \n","101747           0           0           0           0           0   \n","\n","        diag_1_149  diag_1_150  diag_1_151  diag_1_152  diag_1_153  \\\n","6139             0           0           0           0           0   \n","68443            0           0           0           0           0   \n","43279            0           0           0           0           0   \n","20468            0           0           0           0           0   \n","52226            0           0           0           0           0   \n","...            ...         ...         ...         ...         ...   \n","101696           0           0           0           0           0   \n","101724           0           0           0           0           0   \n","101729           0           0           0           0           0   \n","101743           0           0           0           0           0   \n","101747           0           0           0           0           0   \n","\n","        diag_1_154  diag_1_155  ...  repaglinide_Down  repaglinide_No  \\\n","6139             0           0  ...                 0               1   \n","68443            0           0  ...                 0               1   \n","43279            0           0  ...                 0               1   \n","20468            0           0  ...                 0               1   \n","52226            0           0  ...                 0               1   \n","...            ...         ...  ...               ...             ...   \n","101696           0           0  ...                 0               1   \n","101724           0           0  ...                 0               1   \n","101729           0           0  ...                 0               1   \n","101743           0           0  ...                 0               1   \n","101747           0           0  ...                 0               1   \n","\n","        repaglinide_Steady  repaglinide_Up  nateglinide_Down  nateglinide_No  \\\n","6139                     0               0                 0               1   \n","68443                    0               0                 0               1   \n","43279                    0               0                 0               1   \n","20468                    0               0                 0               1   \n","52226                    0               0                 0               1   \n","...                    ...             ...               ...             ...   \n","101696                   0               0                 0               1   \n","101724                   0               0                 0               1   \n","101729                   0               0                 0               1   \n","101743                   0               0                 0               1   \n","101747                   0               0                 0               1   \n","\n","        nateglinide_Steady  nateglinide_Up  chlorpropamide_No  \\\n","6139                     0               0                  1   \n","68443                    0               0                  1   \n","43279                    0               0                  1   \n","20468                    0               0                  1   \n","52226                    0               0                  1   \n","...                    ...             ...                ...   \n","101696                   0               0                  1   \n","101724                   0               0                  1   \n","101729                   0               0                  1   \n","101743                   0               0                  1   \n","101747                   0               0                  1   \n","\n","        chlorpropamide_Steady  chlorpropamide_Up  glimepiride_Down  \\\n","6139                        0                  0                 0   \n","68443                       0                  0                 0   \n","43279                       0                  0                 0   \n","20468                       0                  0                 0   \n","52226                       0                  0                 0   \n","...                       ...                ...               ...   \n","101696                      0                  0                 0   \n","101724                      0                  0                 0   \n","101729                      0                  0                 0   \n","101743                      0                  0                 0   \n","101747                      0                  0                 0   \n","\n","        glimepiride_No  glimepiride_Steady  glimepiride_Up  glipizide_Down  \\\n","6139                 1                   0               0               0   \n","68443                1                   0               0               0   \n","43279                1                   0               0               0   \n","20468                1                   0               0               0   \n","52226                1                   0               0               0   \n","...                ...                 ...             ...             ...   \n","101696               1                   0               0               0   \n","101724               1                   0               0               0   \n","101729               1                   0               0               0   \n","101743               1                   0               0               0   \n","101747               1                   0               0               0   \n","\n","        glipizide_No  glipizide_Steady  glipizide_Up  glyburide_Down  \\\n","6139               1                 0             0               1   \n","68443              1                 0             0               0   \n","43279              1                 0             0               0   \n","20468              1                 0             0               0   \n","52226              1                 0             0               0   \n","...              ...               ...           ...             ...   \n","101696             1                 0             0               0   \n","101724             1                 0             0               0   \n","101729             1                 0             0               0   \n","101743             0                 1             0               0   \n","101747             1                 0             0               0   \n","\n","        glyburide_No  glyburide_Steady  glyburide_Up  pioglitazone_Down  \\\n","6139               0                 0             0                  0   \n","68443              1                 0             0                  0   \n","43279              0                 1             0                  0   \n","20468              1                 0             0                  0   \n","52226              1                 0             0                  0   \n","...              ...               ...           ...                ...   \n","101696             1                 0             0                  0   \n","101724             1                 0             0                  0   \n","101729             1                 0             0                  0   \n","101743             1                 0             0                  0   \n","101747             1                 0             0                  0   \n","\n","        pioglitazone_No  pioglitazone_Steady  pioglitazone_Up  \\\n","6139                  1                    0                0   \n","68443                 1                    0                0   \n","43279                 1                    0                0   \n","20468                 1                    0                0   \n","52226                 1                    0                0   \n","...                 ...                  ...              ...   \n","101696                0                    1                0   \n","101724                1                    0                0   \n","101729                1                    0                0   \n","101743                1                    0                0   \n","101747                1                    0                0   \n","\n","        rosiglitazone_Down  rosiglitazone_No  rosiglitazone_Steady  \\\n","6139                     0                 1                     0   \n","68443                    0                 1                     0   \n","43279                    0                 1                     0   \n","20468                    0                 1                     0   \n","52226                    0                 1                     0   \n","...                    ...               ...                   ...   \n","101696                   0                 1                     0   \n","101724                   0                 1                     0   \n","101729                   0                 1                     0   \n","101743                   0                 1                     0   \n","101747                   0                 1                     0   \n","\n","        rosiglitazone_Up  acarbose_Down  acarbose_No  acarbose_Steady  \\\n","6139                   0              0            1                0   \n","68443                  0              0            1                0   \n","43279                  0              0            1                0   \n","20468                  0              0            1                0   \n","52226                  0              0            1                0   \n","...                  ...            ...          ...              ...   \n","101696                 0              0            1                0   \n","101724                 0              0            1                0   \n","101729                 0              0            1                0   \n","101743                 0              0            1                0   \n","101747                 0              0            1                0   \n","\n","        acarbose_Up  miglitol_Down  miglitol_No  miglitol_Steady  \\\n","6139              0              0            1                0   \n","68443             0              0            1                0   \n","43279             0              0            1                0   \n","20468             0              0            1                0   \n","52226             0              0            1                0   \n","...             ...            ...          ...              ...   \n","101696            0              0            1                0   \n","101724            0              0            1                0   \n","101729            0              0            1                0   \n","101743            0              0            1                0   \n","101747            0              0            1                0   \n","\n","        insulin_Down  insulin_No  insulin_Steady  insulin_Up  \\\n","6139               0           0               1           0   \n","68443              0           0               1           0   \n","43279              0           1               0           0   \n","20468              0           1               0           0   \n","52226              0           1               0           0   \n","...              ...         ...             ...         ...   \n","101696             0           0               1           0   \n","101724             1           0               0           0   \n","101729             0           0               1           0   \n","101743             0           1               0           0   \n","101747             1           0               0           0   \n","\n","        glyburide_metformin_Down  glyburide_metformin_No  \\\n","6139                           0                       1   \n","68443                          0                       1   \n","43279                          0                       1   \n","20468                          0                       1   \n","52226                          0                       1   \n","...                          ...                     ...   \n","101696                         0                       1   \n","101724                         0                       1   \n","101729                         0                       0   \n","101743                         0                       1   \n","101747                         0                       1   \n","\n","        glyburide_metformin_Steady  glyburide_metformin_Up  change_Ch  \\\n","6139                             0                       0          1   \n","68443                            0                       0          0   \n","43279                            0                       0          0   \n","20468                            0                       0          0   \n","52226                            0                       0          0   \n","...                            ...                     ...        ...   \n","101696                           0                       0          1   \n","101724                           0                       0          1   \n","101729                           1                       0          1   \n","101743                           0                       0          0   \n","101747                           0                       0          1   \n","\n","        change_No  diabetesMed_No  diabetesMed_Yes  \n","6139            0               0                1  \n","68443           1               0                1  \n","43279           1               0                1  \n","20468           1               1                0  \n","52226           1               1                0  \n","...           ...             ...              ...  \n","101696          0               0                1  \n","101724          0               0                1  \n","101729          0               0                1  \n","101743          1               0                1  \n","101747          0               0                1  \n","\n","[22714 rows x 1719 columns]"],"text/html":["\n","  <div id=\"df-830c8f24-8bb9-4205-85d5-e8e4e4762f79\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>encounter_id</th>\n","      <th>patient_nbr</th>\n","      <th>age</th>\n","      <th>time_in_hospital</th>\n","      <th>num_lab_procedures</th>\n","      <th>num_procedures</th>\n","      <th>num_medications</th>\n","      <th>number_outpatient</th>\n","      <th>number_emergency</th>\n","      <th>number_inpatient</th>\n","      <th>number_diagnoses</th>\n","      <th>readmitted</th>\n","      <th>race_AfricanAmerican</th>\n","      <th>race_Asian</th>\n","      <th>race_Caucasian</th>\n","      <th>race_Hispanic</th>\n","      <th>race_Other</th>\n","      <th>gender_Female</th>\n","      <th>gender_Male</th>\n","      <th>weight__200</th>\n","      <th>weight__0_25_</th>\n","      <th>weight__100_125_</th>\n","      <th>weight__125_150_</th>\n","      <th>weight__150_175_</th>\n","      <th>weight__175_200_</th>\n","      <th>weight__25_50_</th>\n","      <th>weight__50_75_</th>\n","      <th>weight__75_100_</th>\n","      <th>admission_type_id_Elective</th>\n","      <th>admission_type_id_Emergency</th>\n","      <th>admission_type_id_New Born</th>\n","      <th>admission_type_id_Trauma Center</th>\n","      <th>discharge_disposition_id_Discharged to Home</th>\n","      <th>discharge_disposition_id_Other</th>\n","      <th>admission_source_id_Emergency</th>\n","      <th>admission_source_id_Other</th>\n","      <th>admission_source_id_Referral</th>\n","      <th>diag_1_11</th>\n","      <th>diag_1_112</th>\n","      <th>diag_1_117</th>\n","      <th>diag_1_141</th>\n","      <th>diag_1_143</th>\n","      <th>diag_1_146</th>\n","      <th>diag_1_149</th>\n","      <th>diag_1_150</th>\n","      <th>diag_1_151</th>\n","      <th>diag_1_152</th>\n","      <th>diag_1_153</th>\n","      <th>diag_1_154</th>\n","      <th>diag_1_155</th>\n","      <th>...</th>\n","      <th>repaglinide_Down</th>\n","      <th>repaglinide_No</th>\n","      <th>repaglinide_Steady</th>\n","      <th>repaglinide_Up</th>\n","      <th>nateglinide_Down</th>\n","      <th>nateglinide_No</th>\n","      <th>nateglinide_Steady</th>\n","      <th>nateglinide_Up</th>\n","      <th>chlorpropamide_No</th>\n","      <th>chlorpropamide_Steady</th>\n","      <th>chlorpropamide_Up</th>\n","      <th>glimepiride_Down</th>\n","      <th>glimepiride_No</th>\n","      <th>glimepiride_Steady</th>\n","      <th>glimepiride_Up</th>\n","      <th>glipizide_Down</th>\n","      <th>glipizide_No</th>\n","      <th>glipizide_Steady</th>\n","      <th>glipizide_Up</th>\n","      <th>glyburide_Down</th>\n","      <th>glyburide_No</th>\n","      <th>glyburide_Steady</th>\n","      <th>glyburide_Up</th>\n","      <th>pioglitazone_Down</th>\n","      <th>pioglitazone_No</th>\n","      <th>pioglitazone_Steady</th>\n","      <th>pioglitazone_Up</th>\n","      <th>rosiglitazone_Down</th>\n","      <th>rosiglitazone_No</th>\n","      <th>rosiglitazone_Steady</th>\n","      <th>rosiglitazone_Up</th>\n","      <th>acarbose_Down</th>\n","      <th>acarbose_No</th>\n","      <th>acarbose_Steady</th>\n","      <th>acarbose_Up</th>\n","      <th>miglitol_Down</th>\n","      <th>miglitol_No</th>\n","      <th>miglitol_Steady</th>\n","      <th>insulin_Down</th>\n","      <th>insulin_No</th>\n","      <th>insulin_Steady</th>\n","      <th>insulin_Up</th>\n","      <th>glyburide_metformin_Down</th>\n","      <th>glyburide_metformin_No</th>\n","      <th>glyburide_metformin_Steady</th>\n","      <th>glyburide_metformin_Up</th>\n","      <th>change_Ch</th>\n","      <th>change_No</th>\n","      <th>diabetesMed_No</th>\n","      <th>diabetesMed_Yes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6139</th>\n","      <td>30870354.0</td>\n","      <td>17187651.0</td>\n","      <td>75.0</td>\n","      <td>4.0</td>\n","      <td>75.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>68443</th>\n","      <td>193300272.0</td>\n","      <td>41348214.0</td>\n","      <td>85.0</td>\n","      <td>1.0</td>\n","      <td>32.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>43279</th>\n","      <td>133604244.0</td>\n","      <td>75948984.0</td>\n","      <td>85.0</td>\n","      <td>2.0</td>\n","      <td>58.0</td>\n","      <td>0.0</td>\n","      <td>14.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20468</th>\n","      <td>72130182.0</td>\n","      <td>25151994.0</td>\n","      <td>65.0</td>\n","      <td>7.0</td>\n","      <td>8.0</td>\n","      <td>1.0</td>\n","      <td>15.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52226</th>\n","      <td>154786836.0</td>\n","      <td>58648518.0</td>\n","      <td>75.0</td>\n","      <td>10.0</td>\n","      <td>43.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>101696</th>\n","      <td>443168882.0</td>\n","      <td>71186301.0</td>\n","      <td>85.0</td>\n","      <td>4.0</td>\n","      <td>43.0</td>\n","      <td>0.0</td>\n","      <td>20.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>9.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>101724</th>\n","      <td>443700698.0</td>\n","      <td>69505299.0</td>\n","      <td>75.0</td>\n","      <td>2.0</td>\n","      <td>33.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>9.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>101729</th>\n","      <td>443728472.0</td>\n","      <td>178662695.0</td>\n","      <td>75.0</td>\n","      <td>4.0</td>\n","      <td>41.0</td>\n","      <td>0.0</td>\n","      <td>13.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>101743</th>\n","      <td>443797298.0</td>\n","      <td>89955270.0</td>\n","      <td>75.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>101747</th>\n","      <td>443824292.0</td>\n","      <td>138784172.0</td>\n","      <td>85.0</td>\n","      <td>3.0</td>\n","      <td>31.0</td>\n","      <td>2.0</td>\n","      <td>24.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>9.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>22714 rows × 1719 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-830c8f24-8bb9-4205-85d5-e8e4e4762f79')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-830c8f24-8bb9-4205-85d5-e8e4e4762f79 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-830c8f24-8bb9-4205-85d5-e8e4e4762f79');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b6c84eb4-26f9-4f7a-aa39-d7d772ae8932\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6c84eb4-26f9-4f7a-aa39-d7d772ae8932')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b6c84eb4-26f9-4f7a-aa39-d7d772ae8932 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}],"source":["df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W2FdlKRebWDQ"},"outputs":[],"source":["X = df.drop(label,axis = 1)\n","y = df[label]\n","X_train , X_test , y_train , y_test = train_test_split(X,y , train_size = 0.7 , random_state = 42 )\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12615,"status":"ok","timestamp":1701743046331,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"HKJJF6o7TGY4","outputId":"a32f6691-3c95-44ca-8231-59540a977ea5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting catboost\n","  Downloading catboost-1.2.2-cp310-cp310-manylinux2014_x86_64.whl (98.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.7/98.7 MB\u001b[0m \u001b[31m10.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost) (0.20.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from catboost) (3.7.1)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.23.5)\n","Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.5.3)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from catboost) (1.11.4)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (from catboost) (5.15.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost) (1.16.0)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2023.3.post1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (4.45.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (23.2)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (3.1.1)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly->catboost) (8.2.3)\n","Installing collected packages: catboost\n","Successfully installed catboost-1.2.2\n"]}],"source":["!pip install catboost"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Fm3ehtQHb1VF"},"outputs":[],"source":["from sklearn.svm import SVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier , GradientBoostingClassifier\n","from xgboost import XGBClassifier\n","from catboost import CatBoostClassifier\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score,classification_report\n","import lightgbm as lgb\n","from sklearn.preprocessing import MinMaxScaler\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8Z5Z5qxgbiwb"},"outputs":[],"source":["final = pd.DataFrame({'model':[],'accuracy':[],'precision':[],'recall':[],'f1':[]})\n","classification_reports = pd.DataFrame({'model':[], 'accuracy':[],'precision_0':[], 'recall_0':[], 'f1-score_0':[],\n","                                       'precision_1':[], 'recall_1':[], 'f1-score_1':[]})\n","\n","def ML(model) :\n","    global final, classification_reports\n","    model_name = type(model).__name__\n","    pipe = Pipeline([('scaler',MinMaxScaler()),\n","    ('classifier',model)])\n","    print('fitting', model_name)\n","    pipe.fit(X_train , y_train)\n","    print('fitted', model_name)\n","\n","    y_pred = pipe.predict(X_test)\n","\n","    accuracy = accuracy_score(y_test , y_pred)\n","    precision = precision_score(y_test , y_pred)\n","    recall = recall_score(y_test , y_pred)\n","    f1 = f1_score(y_test , y_pred)\n","\n","    new_row = {'model':model_name,'accuracy':accuracy , 'precision':precision,'recall':recall ,'f1': f1 }\n","    final = pd.concat([final , pd.DataFrame(new_row, index =[0])])\n","\n","    report = classification_report(y_test, y_pred,output_dict=True)\n","    metrics_0 = report.get('0.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","    metrics_1 = report.get('1.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","    new_row = {\n","    'model': model_name,\n","    'accuracy': accuracy,\n","    'precision_0': metrics_0['precision'],\n","    'recall_0': metrics_0['recall'],\n","    'f1-score_0': metrics_0['f1-score'],\n","    'precision_1': metrics_1['precision'],\n","    'recall_1': metrics_1['recall'],\n","    'f1-score_1': metrics_1['f1-score']\n","    }\n","\n","    classification_reports = classification_reports.append(new_row, ignore_index=True)\n","    return classification_reports"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EJOLj7T4bvhZ"},"outputs":[],"source":["SVC_Model = SVC()\n","RandomForest_Model = RandomForestClassifier()\n","GradientBoosting_Model = GradientBoostingClassifier()\n","XGBClassifier_Model = XGBClassifier()\n","LightGBM_Model = lgb.LGBMClassifier(verbose=-1)\n","CatBoost_Model = CatBoostClassifier(verbose=0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-hCABq--cdn5","executionInfo":{"status":"ok","timestamp":1701743133819,"user_tz":360,"elapsed":84865,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"d6f4381f-4e7a-4095-c9a9-a0fe2737a1fa"},"outputs":[{"output_type":"stream","name":"stdout","text":["fitting RandomForestClassifier\n","fitted RandomForestClassifier\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-e7e6370536ac>:38: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]},{"output_type":"stream","name":"stdout","text":["fitting GradientBoostingClassifier\n","fitted GradientBoostingClassifier\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-e7e6370536ac>:38: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]},{"output_type":"stream","name":"stdout","text":["fitting XGBClassifier\n","fitted XGBClassifier\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-e7e6370536ac>:38: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]},{"output_type":"stream","name":"stdout","text":["fitting LGBMClassifier\n","fitted LGBMClassifier\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-e7e6370536ac>:38: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]},{"output_type":"stream","name":"stdout","text":["fitting CatBoostClassifier\n","fitted CatBoostClassifier\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-e7e6370536ac>:38: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]}],"source":["models = [RandomForest_Model,GradientBoosting_Model,XGBClassifier_Model,LightGBM_Model, CatBoost_Model]\n","for model in models :\n","    classification_reports = ML(model)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"aQFP9U8OcjGH","executionInfo":{"status":"ok","timestamp":1701743133820,"user_tz":360,"elapsed":28,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"24268814-3a72-465b-bd19-104de39dbf03"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        model  accuracy  precision    recall        f1\n","0      RandomForestClassifier  0.608217   0.605998  0.603132  0.604562\n","0  GradientBoostingClassifier  0.622304   0.625232  0.597518  0.611061\n","0               XGBClassifier  0.606750   0.604887  0.599882  0.602374\n","0              LGBMClassifier  0.616141   0.616505  0.600473  0.608383\n","0          CatBoostClassifier  0.619809   0.622414  0.595745  0.608788"],"text/html":["\n","  <div id=\"df-ef521eaf-5263-4406-9db5-bdebf3bef399\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>RandomForestClassifier</td>\n","      <td>0.608217</td>\n","      <td>0.605998</td>\n","      <td>0.603132</td>\n","      <td>0.604562</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>GradientBoostingClassifier</td>\n","      <td>0.622304</td>\n","      <td>0.625232</td>\n","      <td>0.597518</td>\n","      <td>0.611061</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>XGBClassifier</td>\n","      <td>0.606750</td>\n","      <td>0.604887</td>\n","      <td>0.599882</td>\n","      <td>0.602374</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>LGBMClassifier</td>\n","      <td>0.616141</td>\n","      <td>0.616505</td>\n","      <td>0.600473</td>\n","      <td>0.608383</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CatBoostClassifier</td>\n","      <td>0.619809</td>\n","      <td>0.622414</td>\n","      <td>0.595745</td>\n","      <td>0.608788</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef521eaf-5263-4406-9db5-bdebf3bef399')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef521eaf-5263-4406-9db5-bdebf3bef399 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef521eaf-5263-4406-9db5-bdebf3bef399');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5a44708f-97a0-48ed-a468-8cdb67a68b82\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5a44708f-97a0-48ed-a468-8cdb67a68b82')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5a44708f-97a0-48ed-a468-8cdb67a68b82 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}],"source":["final"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":243},"id":"OuU1G_5Man9W","executionInfo":{"status":"ok","timestamp":1701743133820,"user_tz":360,"elapsed":21,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"164dc553-f91e-4b6c-83e0-5a7026641939"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        model  accuracy  precision_0  recall_0  f1-score_0  \\\n","0      RandomForestClassifier  0.608217     0.610386  0.613232    0.611806   \n","1  GradientBoostingClassifier  0.622304     0.619659  0.646750    0.632915   \n","2               XGBClassifier  0.606750     0.608557  0.613524    0.611030   \n","3              LGBMClassifier  0.616141     0.615800  0.631594    0.623597   \n","4          CatBoostClassifier  0.619809     0.617450  0.643544    0.630227   \n","\n","   precision_1  recall_1  f1-score_1  \n","0     0.605998  0.603132    0.604562  \n","1     0.625232  0.597518    0.611061  \n","2     0.604887  0.599882    0.602374  \n","3     0.616505  0.600473    0.608383  \n","4     0.622414  0.595745    0.608788  "],"text/html":["\n","  <div id=\"df-e29f4371-603b-4ebc-8cd6-203349c78767\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>accuracy</th>\n","      <th>precision_0</th>\n","      <th>recall_0</th>\n","      <th>f1-score_0</th>\n","      <th>precision_1</th>\n","      <th>recall_1</th>\n","      <th>f1-score_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>RandomForestClassifier</td>\n","      <td>0.608217</td>\n","      <td>0.610386</td>\n","      <td>0.613232</td>\n","      <td>0.611806</td>\n","      <td>0.605998</td>\n","      <td>0.603132</td>\n","      <td>0.604562</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>GradientBoostingClassifier</td>\n","      <td>0.622304</td>\n","      <td>0.619659</td>\n","      <td>0.646750</td>\n","      <td>0.632915</td>\n","      <td>0.625232</td>\n","      <td>0.597518</td>\n","      <td>0.611061</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>XGBClassifier</td>\n","      <td>0.606750</td>\n","      <td>0.608557</td>\n","      <td>0.613524</td>\n","      <td>0.611030</td>\n","      <td>0.604887</td>\n","      <td>0.599882</td>\n","      <td>0.602374</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LGBMClassifier</td>\n","      <td>0.616141</td>\n","      <td>0.615800</td>\n","      <td>0.631594</td>\n","      <td>0.623597</td>\n","      <td>0.616505</td>\n","      <td>0.600473</td>\n","      <td>0.608383</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CatBoostClassifier</td>\n","      <td>0.619809</td>\n","      <td>0.617450</td>\n","      <td>0.643544</td>\n","      <td>0.630227</td>\n","      <td>0.622414</td>\n","      <td>0.595745</td>\n","      <td>0.608788</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e29f4371-603b-4ebc-8cd6-203349c78767')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e29f4371-603b-4ebc-8cd6-203349c78767 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e29f4371-603b-4ebc-8cd6-203349c78767');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8857f940-de34-4405-bd2c-6ff21da17eb7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8857f940-de34-4405-bd2c-6ff21da17eb7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8857f940-de34-4405-bd2c-6ff21da17eb7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}],"source":["classification_reports"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"81DZjFAbe86o"},"outputs":[],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.layers import ReLU ,PReLU , LeakyReLU , ELU\n","from tensorflow.keras.layers import Dropout\n","from tensorflow.keras import regularizers\n","from tensorflow.keras.callbacks import EarlyStopping\n","from keras.metrics import Accuracy, F1Score, Precision, Recall"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eItHQIVjglh7"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KUKPrXXJck6-"},"outputs":[],"source":["scaler = MinMaxScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1Xn4-yQzfdDp"},"outputs":[],"source":["early_stopping = EarlyStopping(monitor = 'val_mean_squared_error' , patience = 10  ,restore_best_weights = True )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yRsUwXblgfSw"},"outputs":[],"source":["model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(65, activation='relu'),\n","    tf.keras.layers.Dense(32, activation='relu'),\n","    tf.keras.layers.Dense(1, activation='sigmoid')\n","])"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27363,"status":"ok","timestamp":1701743164339,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"JijxRNXngmhK","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7954dfbc-a5ba-4c84-a336-7fe8f383c77b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","497/497 [==============================] - 8s 4ms/step - loss: 0.6801 - precision: 0.5685 - recall: 0.5578\n","Epoch 2/10\n","497/497 [==============================] - 2s 4ms/step - loss: 0.6642 - precision: 0.6007 - recall: 0.6118\n","Epoch 3/10\n","497/497 [==============================] - 2s 4ms/step - loss: 0.6544 - precision: 0.6119 - recall: 0.6198\n","Epoch 4/10\n","497/497 [==============================] - 3s 5ms/step - loss: 0.6478 - precision: 0.6207 - recall: 0.6222\n","Epoch 5/10\n","497/497 [==============================] - 3s 5ms/step - loss: 0.6415 - precision: 0.6317 - recall: 0.6232\n","Epoch 6/10\n","497/497 [==============================] - 2s 5ms/step - loss: 0.6371 - precision: 0.6371 - recall: 0.6308\n","Epoch 7/10\n","497/497 [==============================] - 2s 4ms/step - loss: 0.6320 - precision: 0.6456 - recall: 0.6397\n","Epoch 8/10\n","497/497 [==============================] - 2s 4ms/step - loss: 0.6280 - precision: 0.6482 - recall: 0.6348\n","Epoch 9/10\n","497/497 [==============================] - 2s 4ms/step - loss: 0.6220 - precision: 0.6531 - recall: 0.6452\n","Epoch 10/10\n","497/497 [==============================] - 2s 4ms/step - loss: 0.6171 - precision: 0.6607 - recall: 0.6513\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7c4c73fc7460>"]},"metadata":{},"execution_count":23}],"source":["model.compile(loss='binary_crossentropy',metrics=[Precision(), Recall()])\n","model.fit(X_train , y_train , epochs = 10)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":911,"status":"ok","timestamp":1701743165237,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"beZX1347hVkG","colab":{"base_uri":"https://localhost:8080/"},"outputId":"aece7533-25be-422f-bb7f-b1087851c173"},"outputs":[{"output_type":"stream","name":"stdout","text":["213/213 [==============================] - 0s 2ms/step\n","{'model': 'Tensor(4-Hidden)(0.3)', 'accuracy': 0.5432134996331621, 'precision': 0.5222751931612691, 'recall': 0.9388297872340425, 'f1': 0.6711735502271047}\n"]}],"source":["y_pred = model.predict(X_test)\n","y_pred = (y_pred >= 0.3).astype(int)\n","accuracy = accuracy_score(y_test , y_pred)\n","precision = precision_score(y_test , y_pred)\n","recall = recall_score(y_test , y_pred)\n","f1 = f1_score(y_test , y_pred)\n","report = classification_report(y_test, y_pred)\n","\n","new_row = {'model':'Tensor(4-Hidden)(0.3)','accuracy':accuracy , 'precision':precision,'recall':recall ,'f1': f1 }\n","print(new_row)\n","final = pd.concat([final , pd.DataFrame(new_row, index =[0])])"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1701743165238,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"fwFkIK8pi2JI","colab":{"base_uri":"https://localhost:8080/"},"outputId":"9854262a-4cff-4bf0-943c-ac804ddb998c"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-25-1ed317467073>:15: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]}],"source":["report = classification_report(y_test, y_pred,output_dict=True)\n","metrics_0 = report.get('0.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","metrics_1 = report.get('1.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","new_row = {\n","'model': 'Tensor(4-Hidden)(0.3)',\n","'accuracy': accuracy,\n","'precision_0': metrics_0['precision'],\n","'recall_0': metrics_0['recall'],\n","'f1-score_0': metrics_0['f1-score'],\n","'precision_1': metrics_1['precision'],\n","'recall_1': metrics_1['recall'],\n","'f1-score_1': metrics_1['f1-score']\n","}\n","\n","classification_reports = classification_reports.append(new_row, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":857,"status":"ok","timestamp":1701743166089,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"Rujr9Msug-Nt","colab":{"base_uri":"https://localhost:8080/"},"outputId":"e066a5fa-39c7-4d01-ecd3-8fa55a33e4dd"},"outputs":[{"output_type":"stream","name":"stdout","text":["213/213 [==============================] - 0s 2ms/step\n","{'model': 'Tensor(4-Hidden)(0.5)', 'accuracy': 0.5942773294203962, 'precision': 0.5801190784364484, 'recall': 0.6622340425531915, 'f1': 0.6184628121981509}\n"]}],"source":["y_pred = model.predict(X_test)\n","y_pred = (y_pred >= 0.5).astype(int)\n","accuracy = accuracy_score(y_test , y_pred)\n","precision = precision_score(y_test , y_pred)\n","recall = recall_score(y_test , y_pred)\n","f1 = f1_score(y_test , y_pred)\n","\n","\n","new_row = {'model':'Tensor(4-Hidden)(0.5)','accuracy':accuracy , 'precision':precision,'recall':recall ,'f1': f1 }\n","print(new_row)\n","final = pd.concat([final , pd.DataFrame(new_row, index =[0])])"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1701743166090,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"MZeTpeKXjBOb","colab":{"base_uri":"https://localhost:8080/"},"outputId":"c26bbe03-028b-4672-b58a-3c652aefe7c7"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-27-6162f9452105>:15: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]}],"source":["report = classification_report(y_test, y_pred,output_dict=True)\n","metrics_0 = report.get('0.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","metrics_1 = report.get('1.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","new_row = {\n","'model': 'Tensor(4-Hidden)(0.5)',\n","'accuracy': accuracy,\n","'precision_0': metrics_0['precision'],\n","'recall_0': metrics_0['recall'],\n","'f1-score_0': metrics_0['f1-score'],\n","'precision_1': metrics_1['precision'],\n","'recall_1': metrics_1['recall'],\n","'f1-score_1': metrics_1['f1-score']\n","}\n","\n","classification_reports = classification_reports.append(new_row, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":1613,"status":"ok","timestamp":1701743167699,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"RqV_qWvUhetR","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7318bd50-5af1-49e1-c37a-bedbf8c82ff5"},"outputs":[{"output_type":"stream","name":"stdout","text":["213/213 [==============================] - 1s 2ms/step\n","{'model': 'Tensor(4-Hidden)(0.7)', 'accuracy': 0.5696258253851797, 'precision': 0.6791104050833995, 'recall': 0.2526595744680851, 'f1': 0.36829636011199657}\n"]}],"source":["y_pred = model.predict(X_test)\n","y_pred = (y_pred >= 0.7).astype(int)\n","accuracy = accuracy_score(y_test , y_pred)\n","precision = precision_score(y_test , y_pred)\n","recall = recall_score(y_test , y_pred)\n","f1 = f1_score(y_test , y_pred)\n","\n","\n","new_row = {'model':'Tensor(4-Hidden)(0.7)','accuracy':accuracy , 'precision':precision,'recall':recall ,'f1': f1 }\n","print(new_row)\n","final = pd.concat([final , pd.DataFrame(new_row, index =[0])])"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":17,"status":"ok","timestamp":1701743167700,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"daoaYBFsjCxU","colab":{"base_uri":"https://localhost:8080/"},"outputId":"313a62ee-aa84-467b-a436-c2098df131d7"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-29-e557dea09b9b>:15: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]}],"source":["report = classification_report(y_test, y_pred,output_dict=True)\n","metrics_0 = report.get('0.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","metrics_1 = report.get('1.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","new_row = {\n","'model': 'Tensor(4-Hidden)(0.7)',\n","'accuracy': accuracy,\n","'precision_0': metrics_0['precision'],\n","'recall_0': metrics_0['recall'],\n","'f1-score_0': metrics_0['f1-score'],\n","'precision_1': metrics_1['precision'],\n","'recall_1': metrics_1['recall'],\n","'f1-score_1': metrics_1['f1-score']\n","}\n","\n","classification_reports = classification_reports.append(new_row, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":849,"status":"ok","timestamp":1701743168536,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"vP03jfcThgEy","colab":{"base_uri":"https://localhost:8080/"},"outputId":"841c7f6c-08a2-4afe-c7d3-4570fd3a36d3"},"outputs":[{"output_type":"stream","name":"stdout","text":["213/213 [==============================] - 1s 3ms/step\n","{'model': 'Tensor(4-Hidden)(0.9)', 'accuracy': 0.5123991195891416, 'precision': 0.8279569892473119, 'recall': 0.022754137115839245, 'f1': 0.04429105550762152}\n"]}],"source":["y_pred = model.predict(X_test)\n","y_pred = (y_pred >= 0.9).astype(int)\n","accuracy = accuracy_score(y_test , y_pred)\n","precision = precision_score(y_test , y_pred)\n","recall = recall_score(y_test , y_pred)\n","f1 = f1_score(y_test , y_pred)\n","\n","\n","new_row = {'model':'Tensor(4-Hidden)(0.9)','accuracy':accuracy , 'precision':precision,'recall':recall ,'f1': f1 }\n","print(new_row)\n","final = pd.concat([final , pd.DataFrame(new_row, index =[0])])"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":21,"status":"ok","timestamp":1701743168537,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"lIdfU76fjEXA","colab":{"base_uri":"https://localhost:8080/"},"outputId":"46f676ce-62f4-4727-bfa0-a384f6da75f5"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-31-890d55b2956e>:15: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  classification_reports = classification_reports.append(new_row, ignore_index=True)\n"]}],"source":["report = classification_report(y_test, y_pred,output_dict=True)\n","metrics_0 = report.get('0.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","metrics_1 = report.get('1.0', {'precision': 0, 'recall': 0, 'f1-score': 0})\n","new_row = {\n","'model': 'Tensor(4-Hidden)(0.9)',\n","'accuracy': accuracy,\n","'precision_0': metrics_0['precision'],\n","'recall_0': metrics_0['recall'],\n","'f1-score_0': metrics_0['f1-score'],\n","'precision_1': metrics_1['precision'],\n","'recall_1': metrics_1['recall'],\n","'f1-score_1': metrics_1['f1-score']\n","}\n","\n","classification_reports = classification_reports.append(new_row, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":272,"status":"ok","timestamp":1701743168799,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"BlcitBishk-A","colab":{"base_uri":"https://localhost:8080/","height":331},"outputId":"37151789-9d7a-42ed-f930-fa9c06e7e5f3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        model  accuracy  precision    recall        f1\n","0      RandomForestClassifier  0.608217   0.605998  0.603132  0.604562\n","0  GradientBoostingClassifier  0.622304   0.625232  0.597518  0.611061\n","0               XGBClassifier  0.606750   0.604887  0.599882  0.602374\n","0              LGBMClassifier  0.616141   0.616505  0.600473  0.608383\n","0          CatBoostClassifier  0.619809   0.622414  0.595745  0.608788\n","0       Tensor(4-Hidden)(0.3)  0.543213   0.522275  0.938830  0.671174\n","0       Tensor(4-Hidden)(0.5)  0.594277   0.580119  0.662234  0.618463\n","0       Tensor(4-Hidden)(0.7)  0.569626   0.679110  0.252660  0.368296\n","0       Tensor(4-Hidden)(0.9)  0.512399   0.827957  0.022754  0.044291"],"text/html":["\n","  <div id=\"df-625147ea-658d-4e69-994e-831588569f41\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>RandomForestClassifier</td>\n","      <td>0.608217</td>\n","      <td>0.605998</td>\n","      <td>0.603132</td>\n","      <td>0.604562</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>GradientBoostingClassifier</td>\n","      <td>0.622304</td>\n","      <td>0.625232</td>\n","      <td>0.597518</td>\n","      <td>0.611061</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>XGBClassifier</td>\n","      <td>0.606750</td>\n","      <td>0.604887</td>\n","      <td>0.599882</td>\n","      <td>0.602374</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>LGBMClassifier</td>\n","      <td>0.616141</td>\n","      <td>0.616505</td>\n","      <td>0.600473</td>\n","      <td>0.608383</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CatBoostClassifier</td>\n","      <td>0.619809</td>\n","      <td>0.622414</td>\n","      <td>0.595745</td>\n","      <td>0.608788</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Tensor(4-Hidden)(0.3)</td>\n","      <td>0.543213</td>\n","      <td>0.522275</td>\n","      <td>0.938830</td>\n","      <td>0.671174</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Tensor(4-Hidden)(0.5)</td>\n","      <td>0.594277</td>\n","      <td>0.580119</td>\n","      <td>0.662234</td>\n","      <td>0.618463</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Tensor(4-Hidden)(0.7)</td>\n","      <td>0.569626</td>\n","      <td>0.679110</td>\n","      <td>0.252660</td>\n","      <td>0.368296</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Tensor(4-Hidden)(0.9)</td>\n","      <td>0.512399</td>\n","      <td>0.827957</td>\n","      <td>0.022754</td>\n","      <td>0.044291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-625147ea-658d-4e69-994e-831588569f41')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-625147ea-658d-4e69-994e-831588569f41 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-625147ea-658d-4e69-994e-831588569f41');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ba4f7a0-16fd-4323-943b-9643aebefc87\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ba4f7a0-16fd-4323-943b-9643aebefc87')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ba4f7a0-16fd-4323-943b-9643aebefc87 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}],"source":["final"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":17,"status":"ok","timestamp":1701743168800,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"SfFrvqcytZF_","colab":{"base_uri":"https://localhost:8080/"},"outputId":"102280af-f12d-4f05-ef4d-56f0ef4f5c56"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['model', 'accuracy', 'precision_0', 'recall_0', 'f1-score_0',\n","       'precision_1', 'recall_1', 'f1-score_1'],\n","      dtype='object')"]},"metadata":{},"execution_count":33}],"source":["classification_reports.columns"]},{"cell_type":"code","source":[],"metadata":{"id":"2A83wW6cxnzO"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":1353,"status":"ok","timestamp":1701745200759,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"},"user_tz":360},"id":"OMKqNhHCjLjm","colab":{"base_uri":"https://localhost:8080/","height":394},"outputId":"e36c08a4-95c3-482f-ded2-d8812d5029c9"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["models = classification_reports['model']\n","accuracy = classification_reports['accuracy']\n","\n","fig, ax = plt.subplots(figsize=(10, 6))\n","\n","# Plotting accuracy for each model as grouped bars\n","bar_width = 0.2  # Adjust the width between bars as needed\n","x = range(len(models))\n","\n","for i, acc in enumerate(accuracy):\n","    ax.bar(x[i], acc, width=bar_width, color='blue', alpha=0.8, label=models[i])\n","\n","ax.set_ylabel('Accuracy')\n","ax.set_title('Accuracy by Model')\n","ax.set_xticks(x)\n","ax.set_xticklabels(models)\n","ax.set_ylim(0, 1)  # Set y-axis limits for accuracy (0 to 1)\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.savefig('drive/MyDrive/diabetes/accuracy.png')\n","plt.show()"]},{"cell_type":"code","source":["precision_0 = classification_reports['precision_0']\n","recall_0 = classification_reports['recall_0']\n","f1_0 = classification_reports['f1-score_0']\n","precision_1 = classification_reports['precision_1']\n","recall_1 = classification_reports['recall_1']\n","f1_1 = classification_reports['f1-score_1']\n","\n","# Define width for each bar\n","bar_width = 0.2\n","x = np.arange(len(models))\n","bar_positions_0 = x - bar_width/2\n","bar_positions_1 = x + bar_width/2\n","\n","# Create subplots for precision, recall, and f1-score side by side for classes 0 and 1\n","fig, axs = plt.subplots(3, 1, figsize=(10, 12), sharex=True)\n","\n","# Plotting precision for Class 0 and Class 1 side by side\n","axs[0].bar(bar_positions_0, precision_0, width=bar_width, color='orange', alpha=0.8, label='Class 0 Precision')\n","axs[0].bar(bar_positions_1, precision_1, width=bar_width, color='green', alpha=0.8, label='Class 1 Precision')\n","axs[0].set_ylabel('Precision')\n","axs[0].set_title('Precision by Model')\n","axs[0].set_xticks(x)\n","axs[0].set_xticklabels(models)\n","axs[0].legend()\n","\n","# Plotting recall for Class 0 and Class 1 side by side\n","axs[1].bar(bar_positions_0, recall_0, width=bar_width, color='orange', alpha=0.8, label='Class 0 Recall')\n","axs[1].bar(bar_positions_1, recall_1, width=bar_width, color='green', alpha=0.8, label='Class 1 Recall')\n","axs[1].set_ylabel('Recall')\n","axs[1].set_title('Recall by Model')\n","axs[1].set_xticks(x)\n","axs[1].set_xticklabels(models)\n","axs[1].legend()\n","\n","# Plotting F1-score for Class 0 and Class 1 side by side\n","axs[2].bar(bar_positions_0, f1_0, width=bar_width, color='orange', alpha=0.8, label='Class 0 F1-score')\n","axs[2].bar(bar_positions_1, f1_1, width=bar_width, color='green', alpha=0.8, label='Class 1 F1-score')\n","axs[2].set_ylabel('F1-score')\n","axs[2].set_title('F1-score by Model')\n","axs[2].set_xticks(x)\n","axs[2].set_xticklabels(models)\n","axs[2].legend()\n","plt.savefig('drive/MyDrive/diabetes/modelingScores.png')\n","\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":777},"id":"3MZRi1bPtwES","executionInfo":{"status":"ok","timestamp":1701745220688,"user_tz":360,"elapsed":2510,"user":{"displayName":"Mirna Elizondo","userId":"16948753414607921984"}},"outputId":"733905b7-2f4c-4763-e951-7f0ebe0e26f7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1200 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"QhMKgfcsxevN"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"1glQkuWjgoNlzvLVhlkELsepEXurTfpwB","timestamp":1699504018876}],"mount_file_id":"1_ypSu9zkAZ3I8Yt5vv_MqWLpW2yC5nQL","authorship_tag":"ABX9TyN4InEFIcLFFMuDRIVRArVf"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}